// Foursquare API Credentials - Tim
// const client_id = '&client_id=' + 'Q5PQQNTJS4UGM10I1RWODUVC4XS2PBULBDYZKFLAFECJ4ZIM';
// const client_secret = '&client_secret=' + '4TMTXMB4LL35O3GR1QXONNBAJ5OCGZUO5HLWAQQGSHHPZZV2';

// // Foursquare API Credentials - Nikita
// const client_id = '&client_id=' + '2F1JEBGBXWUCCK1VS5OZAFT2BELR15OCVOBRDEVCJFKQNDGM';
// const client_secret = '&client_secret=' + 'UIK2BOJFZ1OEZJRBIMW35SOGRB1LFETJVWICBAVBE4JJVCJP';

// // Foursquare API Credentials - Louella
const client_id = '&client_id=' + 'JSBCLUKSAG3BD0D1BOIRNAEMKWTQY0P401LJCYETQQXBS3W0';
const client_secret = '&client_secret=' + 'HSRPRSP1SQJWTG3NN2EOBPCASHO52SBOU4ZPFXOJPZYIL3DK';
// Step 2 - Link the html element to the foursquare category ID
function identifyCategory(e) {
  // declare variables
  let chosenRadius = '0';
  let chosenCategory = '0';
  // simple conditional to match the DOM element to the api ID
  if (e.id == 'jsCatParks') {
    chosenRadius = '2000';
    chosenCategory = '4bf58dd8d48988d163941735';
    createSearchRequestURI(chosenRadius, chosenCategory);

  } else if (e.id == 'jsCatBeaches') {
    chosenRadius = '2000';
    chosenCategory = '4bf58dd8d48988d1e2941735';
    createSearchRequestURI(chosenRadius, chosenCategory);

  } else if (e.id == 'jsCatLookouts') {
    chosenRadius = '2000';
    chosenCategory = '4bf58dd8d48988d165941735';
    createSearchRequestURI(chosenRadius, chosenCategory);
  }
  else if (e.id == 'jsCatTrending') {
    extractNeededData(trending.response.venues);
  }
}


// Step 3 - Create the search query request uri
function createSearchRequestURI(rad, cat) {
  const baseURI = 'https://api.foursquare.com/v2/venues/search?v=20170901';
  // const client_id = '&client_id=' + 'Q5PQQNTJS4UGM10I1RWODUVC4XS2PBULBDYZKFLAFECJ4ZIM';
  // const client_secret = '&client_secret=' + '4TMTXMB4LL35O3GR1QXONNBAJ5OCGZUO5HLWAQQGSHHPZZV2';
  const latlong = '&ll=' + '-36.8786499,174.7602798';
  // This value will be a variable
  const radius = '&radius=' + rad;
  // This value will be a variable
  const categoryId = '&categoryId=' + cat;
  // Put all the pieces together
  const requestURI = baseURI + client_id + client_secret + latlong + radius + categoryId;
  
  makeSearchRequest(requestURI);
}


// Step 4 - Make the actual request
function makeSearchRequest(uri) {
  fetch(uri)
    .then(function(response) {
      return response.json();
    })
    .then(function(myJson) {
      extractNeededData(myJson.response.venues);
      //console.log(myJson.response.venues);
    })
    .catch(function(error) {
      // Code for handling errors
      console.log(error);
    });
}


// Step 5 - Extract the data we are using from the json response
function extractNeededData(data) {
  console.log(data);

  // declare empty array
  const venuesForMap = [];

  // Loop through json response
  data.forEach(venue => {

    // Push the name, ID, and latlng into an array to use for the map
    venuesForMap.push({
      name: venue.name,
      id: venue.id,
      latlng: 
        [
          venue.location.lat,
          venue.location.lng
        ]
      
    });
  });

  createMap(venuesForMap);
}




  
// Tim's work START
// Categories:
// Parks: 4bf58dd8d48988d163941735
// Beaches: 4bf58dd8d48988d1e2941735
// Pools: 4bf58dd8d48988d15e941735
// Scenic Lookout: 4bf58dd8d48988d165941735
// Skate Park: 4bf58dd8d48988d167941735


// Identifiers
// Every ID prefixed with 'js' is a DOM element
const jsCatDropdown = document.getElementById('jsCatDropdown');
const jsCatTrending = document.getElementById('jsCatTrending');
const jsCatParks = document.getElementById('jsCatParks');
const jsCatBeaches = document.getElementById('jsCatBeaches');
const jsCatLookouts = document.getElementById('jsCatLookouts');
// Modal identifiers
var modalContentContainer = document.getElementById('modalContentContainer');
var modalContentFooter = document.getElementById('modalContentFooter');
const jsPopUpButton = document.getElementById('#modalCenter');
const jsModalLongTitle = document.getElementById('jsModalLongTitle');
const jsVenueImg = document.getElementById('jsVenueImg');
const jsVenueDescription = document.getElementById('jsVenueDescription');
const jsVenueWebsite = document.getElementById('jsVenueWebsite');
const jsMiniMap = document.getElementById('jsMiniMap');
const jsDirections = document.getElementById('jsDirections');
// this needs to be a global variable in order to access it from different functions
let mymap;
let zoom = 0;
// Tim's work END

document.addEventListener("DOMContentLoaded", () => {
  console.log("DOM ready!");

  // identify the event target
  jsCatDropdown.addEventListener('click', (e) => {
    identifyCategory(e.target);
  });

  // Load the empty map on page load
  createInitialMap();

});


// Detect screen width and change zoom accordingly - by Nikita
function detectScreenWidth() {

  if ($(window).width() < 768) {
    let zoom = 10;
    console.log('screen size is less than 768px');
    return zoom;
  }
  else {
    let zoom = 11;
    console.log('screen size is less than 768px');
    return zoom;
  };
}


function createInitialMap() {

  // detect screen size
  let z = detectScreenWidth();

  // Map work by Nikita START
  let center = [-36.8977931, 174.7854973];
  mymap = L.map('mapid').setView(center, z);

  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoidGhhbHl4OTAiLCJhIjoiY2o2YjdrZHRlMWJmYjJybDd2cW1rYnVnNSJ9.j_DQLfixHfhioVjH6qmqkw', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1IjoibmlraXRhaG9pbmVzIiwiYSI6ImNqc203cHN5NDEwaGg0OXBpYnE0aXhhZmYifQ.58l8dUZg4uiFn7BYnZCJFA'
  }).addTo(mymap);

  // radius
  L.circle(center, {
    radius: 21500,
    color: 'salmon',
    weight: 1,
    fill: true
  }).addTo(mymap);
  // Map work by Nikita END
}

function createMap(v) {

  // detect screen size
  let z = detectScreenWidth();

  // remove previously loaded map first
  if (mymap) {
    mymap.remove();
  }

  // Map work by Nikita START
  let center = [-36.8977931, 174.7854973];
  mymap = L.map('mapid').setView(center, z);

  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoidGhhbHl4OTAiLCJhIjoiY2o2YjdrZHRlMWJmYjJybDd2cW1rYnVnNSJ9.j_DQLfixHfhioVjH6qmqkw', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1IjoibmlraXRhaG9pbmVzIiwiYSI6ImNqc203cHN5NDEwaGg0OXBpYnE0aXhhZmYifQ.58l8dUZg4uiFn7BYnZCJFA'
  }).addTo(mymap);

  // radius
  L.circle(center, {
    radius: 21500,
    color: 'salmon',
    weight: 1,
    fill: true
  }).addTo(mymap);

  // nikita - putting markers on the map
  v.forEach(function (venue) {
    try {
      var serviceIcon = L.icon({
        iconUrl: '../build/img/pin.svg',
        iconSize: [72, 72],
        popupAnchor: [0, -36]
      });
      var marker = L.marker(venue.latlng, { icon: serviceIcon }).addTo(mymap);
      marker.bindPopup('<div>' + venue.name + '</div>' + '<button type="button" id="'+ venue.id +'" class="btn btn-primary popupButton" data-toggle="modal" data-target="#modalCenter">' + 'Explore' + '</button>')

      //louella - target pop up button to populate details
      const version = '?v=20170901';
      const key = version + client_id + client_secret;
      const venueId = venue.id;
      const baseURL = 'https://api.foursquare.com/v2/venues/';
      let venueUrl = baseURL + venueId + key;

      marker.on('popupopen', () => {
        // pop up button
        const jsPopUpButton = document.getElementById(venue.id);
        // click function
        jsPopUpButton.addEventListener('click', (e) => {
          console.log(e.target);
          //Add venue details through API call
          fetchVenue(venueUrl);
        });
      })

    } catch (error) {
      console.log(error);
    }
  });
}


// Step 4 - Make the actual request
function fetchVenue(uri) {
  fetch(uri)
    .then(function (response) {
      // a. return response in json format
      return response.json();
    })
    .then(function (myJson) {
      // b. extract data from response and run this function
      venueDetails(myJson.response);
    })
    .catch(function (error) {
      // Code for handling errors
      console.log(error);
    });
}

function venueDetails(res) {
  window.fake = res;
  // Modal title
  const title = res.venue.name;
  // Venue description
  if (res.venue.description !== undefined) {
    var description = res.venue.description;
  } else {
    var description = 'This venue does not have a description';
  }
  //Construct modal image/
  if (res.venue.bestPhoto !== undefined) {
    var photoPrefix = res.venue.bestPhoto.prefix;
    var photoSuffix = res.venue.bestPhoto.suffix;
    var venueImage = photoPrefix + '720x720' + photoSuffix;
  } else {
    var venueImage = 'src/img/dog-3.jpg';
  }
  // Add website
  if (res.venue.shortUrl !== undefined) {
    var website = res.venue.shortUrl;
  }
  // Add address
  if (res.venue.location.address !== undefined) {
    var address = res.venue.location.address + ', ' + res.venue.location.city;
  } else {
    var address = 'This venue does not have an address';
  }
  // Adding Mini Map
  // Insert Mini map with user location https://leafletjs.com/reference-1.0.0.html
  let venueLocation = [res.venue.location.lat, res.venue.location.lng];
  let miniMap = L.map('jsMiniMap', {
    scrollWheelZoom: false
  }).setView(venueLocation, 17);
  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1IjoibmlraXRhaG9pbmVzIiwiYSI6ImNqc203cHN5NDEwaGg0OXBpYnE0aXhhZmYifQ.58l8dUZg4uiFn7BYnZCJFA'
  }).addTo(miniMap);
  // Directions
  const directions = 'http://www.google.com/maps/place/' + res.venue.location.lat + ',' + res.venue.location.lng;
  // Inject template with modal content
  createModalContent(title, venueImage, description, address, website, directions);
};

// Create Modal content
function createModalContent(title, venueImage, description, address, website, directions) {
  // empty modal if it has contents
  // if($('#modalCenter')) {
  //   $('#modalCenter').empty();
  // }


  // modal content template
  modalContentContainer.innerHTML = `
  <div class="modal-header">
    <h5 class="modal-title" id="jsModalLongTitle">${title}</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
  <div class="modal-body">
    <div class="venue-item">
      <img class="d-block w-100" id="jsVenueImg" src="${venueImage}" alt="modal-example">
    </div>
    <p id="jsVenueDescription">${description}</p>
    <p class="jsVenueAddress">${address}</p>
    <a class="pr-5" id="jsVenueWebsite" href="${website}" target="_blank">website link</a>
    <a href="${directions}" class="btn btn-primary" id="jsDirections" target="_blank">Get Directions</a>
  </div>
  `;

  // Now toggle the Modal
  $('#modalCenter').modal('show');
}
const trending = {
    "meta": {
        "code": 200,
        "requestId": "5cb660314434b94d1eaee476"
    },
    "response": {
        "venues": [
            {
                "id": "5bf629fe81635b002c9d71c0",
                "name": "Bridgeman Reserve",
                "contact": {},
                "location": {
                    "lat": -36.877975,
                    "lng": 174.76097,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.877975,
                            "lng": 174.76097
                        }
                    ],
                    "distance": 97,
                    "postalCode": "1024",
                    "cc": "NZ",
                    "city": "Auckland",
                    "state": "Auckland",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "Auckland 1024",
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d163941735",
                        "name": "Park",
                        "pluralName": "Parks",
                        "shortName": "Park",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456049",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "55523c45498e585e9e197039",
                "name": "Mt. Eden Domain",
                "contact": {},
                "location": {
                    "lat": -36.876106,
                    "lng": 174.76526,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.876106,
                            "lng": 174.76526
                        }
                    ],
                    "distance": 526,
                    "cc": "NZ",
                    "neighborhood": "Ponsonby",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d163941735",
                        "name": "Park",
                        "pluralName": "Parks",
                        "shortName": "Park",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456049",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4e30c846fa7638e661325749",
                "name": "Big King Reserve",
                "contact": {},
                "location": {
                    "lat": -36.89510648910473,
                    "lng": 174.74846356294717,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.89510648910473,
                            "lng": 174.74846356294717
                        }
                    ],
                    "distance": 2112,
                    "cc": "NZ",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d1e5941735",
                        "name": "Dog Run",
                        "pluralName": "Dog Runs",
                        "shortName": "Dog Run",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/dogrun_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456049",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4c3ff3a4af052d7f0a2d7b79",
                "name": "Gribblehurst Park (Eden Rugby Club)",
                "contact": {},
                "location": {
                    "lat": -36.88055296198572,
                    "lng": 174.73874126016824,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.88055296198572,
                            "lng": 174.73874126016824
                        }
                    ],
                    "distance": 1929,
                    "cc": "NZ",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d163941735",
                        "name": "Park",
                        "pluralName": "Parks",
                        "shortName": "Park",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456049",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4c65f74f9cb82d7f63968fd2",
                "name": "Mangawhai heads",
                "contact": {},
                "location": {
                    "lat": -36.86594843313934,
                    "lng": 174.75346554021155,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.86594843313934,
                            "lng": 174.75346554021155
                        }
                    ],
                    "distance": 1538,
                    "cc": "NZ",
                    "city": "Mangawhai",
                    "state": "Northland",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "Mangawhai",
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d1e2941735",
                        "name": "Beach",
                        "pluralName": "Beaches",
                        "shortName": "Beach",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/beach_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456292",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4efe94fcb6346feaebb48486",
                "name": "Orewa Surf Club",
                "contact": {},
                "location": {
                    "lat": -36.87882619858935,
                    "lng": 174.7524660207742,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.87882619858935,
                            "lng": 174.7524660207742
                        }
                    ],
                    "distance": 696,
                    "cc": "NZ",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d1e3941735",
                        "name": "Surf Spot",
                        "pluralName": "Surf Spots",
                        "shortName": "Surf Spot",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/surfspot_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456292",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4b5204e0f964a520b06127e3",
                "name": "Mount Eden - Maungawhau",
                "contact": {},
                "location": {
                    "address": "Mount Eden",
                    "lat": -36.87750940966855,
                    "lng": 174.76439237594604,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.87750940966855,
                            "lng": 174.76439237594604
                        }
                    ],
                    "distance": 387,
                    "postalCode": "1024",
                    "cc": "NZ",
                    "city": "Mt Eden",
                    "state": "Auckland",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "Mount Eden",
                        "Mt Eden 1024",
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4eb1d4d54b900d56c88a45fc",
                        "name": "Mountain",
                        "pluralName": "Mountains",
                        "shortName": "Mountain",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/mountain_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456641",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4f068cd19adf3def7216ea27",
                "name": "Balconaje",
                "contact": {},
                "location": {
                    "address": "Remuera Rd",
                    "lat": -36.87403698743148,
                    "lng": 174.78259690703499,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.87403698743148,
                            "lng": 174.78259690703499
                        }
                    ],
                    "distance": 2052,
                    "cc": "NZ",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "Remuera Rd",
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d165941735",
                        "name": "Scenic Lookout",
                        "pluralName": "Scenic Lookouts",
                        "shortName": "Scenic Lookout",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456641",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4f28c606e4b03a37671e61dc",
                "name": "Bassett Rd",
                "contact": {},
                "location": {
                    "address": "Bassett Rd",
                    "lat": -36.869772,
                    "lng": 174.782626,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.869772,
                            "lng": 174.782626
                        }
                    ],
                    "distance": 2221,
                    "cc": "NZ",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "Bassett Rd",
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d165941735",
                        "name": "Scenic Lookout",
                        "pluralName": "Scenic Lookouts",
                        "shortName": "Scenic Lookout",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456641",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "4d9d1abb8efaa143fa4d5eb7",
                "name": "Mt St John Summit",
                "contact": {},
                "location": {
                    "lat": -36.88340555366849,
                    "lng": 174.78072120107328,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.88340555366849,
                            "lng": 174.78072120107328
                        }
                    ],
                    "distance": 1895,
                    "postalCode": "1024",
                    "cc": "NZ",
                    "city": "Auckland",
                    "state": "Auckland",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "Auckland 1024",
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d165941735",
                        "name": "Scenic Lookout",
                        "pluralName": "Scenic Lookouts",
                        "shortName": "Scenic Lookout",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456641",
                "venueChains": [],
                "hasPerk": false
            },
            {
                "id": "514c0b2de4b0ccf65fce98e6",
                "name": "Gribblehirst Park",
                "contact": {},
                "location": {
                    "lat": -36.872467041531536,
                    "lng": 174.75022723781422,
                    "labeledLatLngs": [
                        {
                            "label": "display",
                            "lat": -36.872467041531536,
                            "lng": 174.75022723781422
                        }
                    ],
                    "distance": 1129,
                    "cc": "NZ",
                    "country": "New Zealand",
                    "formattedAddress": [
                        "New Zealand"
                    ]
                },
                "categories": [
                    {
                        "id": "4bf58dd8d48988d163941735",
                        "name": "Park",
                        "pluralName": "Parks",
                        "shortName": "Park",
                        "icon": {
                            "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                            "suffix": ".png"
                        },
                        "primary": true
                    }
                ],
                "verified": false,
                "stats": {
                    "tipCount": 0,
                    "usersCount": 0,
                    "checkinsCount": 0,
                    "visitsCount": 0
                },
                "beenHere": {
                    "count": 0,
                    "lastCheckinExpiredAt": 0,
                    "marked": false,
                    "unconfirmedCount": 0
                },
                "referralId": "v-1555456694",
                "venueChains": [],
                "hasPerk": false
            }
            
        ],
        "confident": false
    }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJhcHAubWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZvdXJzcXVhcmUgQVBJIENyZWRlbnRpYWxzIC0gVGltXG4vLyBjb25zdCBjbGllbnRfaWQgPSAnJmNsaWVudF9pZD0nICsgJ1E1UFFRTlRKUzRVR00xMEkxUldPRFVWQzRYUzJQQlVMQkRZWktGTEFGRUNKNFpJTSc7XG4vLyBjb25zdCBjbGllbnRfc2VjcmV0ID0gJyZjbGllbnRfc2VjcmV0PScgKyAnNFRNVFhNQjRMTDM1TzNHUjFRWE9OTkJBSjVPQ0daVU81SExXQVFRR1NISFBaWlYyJztcblxuLy8gLy8gRm91cnNxdWFyZSBBUEkgQ3JlZGVudGlhbHMgLSBOaWtpdGFcbi8vIGNvbnN0IGNsaWVudF9pZCA9ICcmY2xpZW50X2lkPScgKyAnMkYxSkVCR0JYV1VDQ0sxVlM1T1pBRlQyQkVMUjE1T0NWT0JSREVWQ0pGS1FOREdNJztcbi8vIGNvbnN0IGNsaWVudF9zZWNyZXQgPSAnJmNsaWVudF9zZWNyZXQ9JyArICdVSUsyQk9KRloxT0VaSlJCSU1XMzVTT0dSQjFMRkVUSlZXSUNCQVZCRTRKSlZDSlAnO1xuXG4vLyAvLyBGb3Vyc3F1YXJlIEFQSSBDcmVkZW50aWFscyAtIExvdWVsbGFcbmNvbnN0IGNsaWVudF9pZCA9ICcmY2xpZW50X2lkPScgKyAnSlNCQ0xVS1NBRzNCRDBEMUJPSVJOQUVNS1dUUVkwUDQwMUxKQ1lFVFFRWEJTM1cwJztcbmNvbnN0IGNsaWVudF9zZWNyZXQgPSAnJmNsaWVudF9zZWNyZXQ9JyArICdIU1JQUlNQMVNRSldURzNOTjJFT0JQQ0FTSE81MlNCT1U0WlBGWE9KUFpZSUwzREsnO1xuLy8gU3RlcCAyIC0gTGluayB0aGUgaHRtbCBlbGVtZW50IHRvIHRoZSBmb3Vyc3F1YXJlIGNhdGVnb3J5IElEXG5mdW5jdGlvbiBpZGVudGlmeUNhdGVnb3J5KGUpIHtcbiAgLy8gZGVjbGFyZSB2YXJpYWJsZXNcbiAgbGV0IGNob3NlblJhZGl1cyA9ICcwJztcbiAgbGV0IGNob3NlbkNhdGVnb3J5ID0gJzAnO1xuICAvLyBzaW1wbGUgY29uZGl0aW9uYWwgdG8gbWF0Y2ggdGhlIERPTSBlbGVtZW50IHRvIHRoZSBhcGkgSURcbiAgaWYgKGUuaWQgPT0gJ2pzQ2F0UGFya3MnKSB7XG4gICAgY2hvc2VuUmFkaXVzID0gJzIwMDAnO1xuICAgIGNob3NlbkNhdGVnb3J5ID0gJzRiZjU4ZGQ4ZDQ4OTg4ZDE2Mzk0MTczNSc7XG4gICAgY3JlYXRlU2VhcmNoUmVxdWVzdFVSSShjaG9zZW5SYWRpdXMsIGNob3NlbkNhdGVnb3J5KTtcblxuICB9IGVsc2UgaWYgKGUuaWQgPT0gJ2pzQ2F0QmVhY2hlcycpIHtcbiAgICBjaG9zZW5SYWRpdXMgPSAnMjAwMCc7XG4gICAgY2hvc2VuQ2F0ZWdvcnkgPSAnNGJmNThkZDhkNDg5ODhkMWUyOTQxNzM1JztcbiAgICBjcmVhdGVTZWFyY2hSZXF1ZXN0VVJJKGNob3NlblJhZGl1cywgY2hvc2VuQ2F0ZWdvcnkpO1xuXG4gIH0gZWxzZSBpZiAoZS5pZCA9PSAnanNDYXRMb29rb3V0cycpIHtcbiAgICBjaG9zZW5SYWRpdXMgPSAnMjAwMCc7XG4gICAgY2hvc2VuQ2F0ZWdvcnkgPSAnNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1JztcbiAgICBjcmVhdGVTZWFyY2hSZXF1ZXN0VVJJKGNob3NlblJhZGl1cywgY2hvc2VuQ2F0ZWdvcnkpO1xuICB9XG4gIGVsc2UgaWYgKGUuaWQgPT0gJ2pzQ2F0VHJlbmRpbmcnKSB7XG4gICAgZXh0cmFjdE5lZWRlZERhdGEodHJlbmRpbmcucmVzcG9uc2UudmVudWVzKTtcbiAgfVxufVxuXG5cbi8vIFN0ZXAgMyAtIENyZWF0ZSB0aGUgc2VhcmNoIHF1ZXJ5IHJlcXVlc3QgdXJpXG5mdW5jdGlvbiBjcmVhdGVTZWFyY2hSZXF1ZXN0VVJJKHJhZCwgY2F0KSB7XG4gIGNvbnN0IGJhc2VVUkkgPSAnaHR0cHM6Ly9hcGkuZm91cnNxdWFyZS5jb20vdjIvdmVudWVzL3NlYXJjaD92PTIwMTcwOTAxJztcbiAgLy8gY29uc3QgY2xpZW50X2lkID0gJyZjbGllbnRfaWQ9JyArICdRNVBRUU5USlM0VUdNMTBJMVJXT0RVVkM0WFMyUEJVTEJEWVpLRkxBRkVDSjRaSU0nO1xuICAvLyBjb25zdCBjbGllbnRfc2VjcmV0ID0gJyZjbGllbnRfc2VjcmV0PScgKyAnNFRNVFhNQjRMTDM1TzNHUjFRWE9OTkJBSjVPQ0daVU81SExXQVFRR1NISFBaWlYyJztcbiAgY29uc3QgbGF0bG9uZyA9ICcmbGw9JyArICctMzYuODc4NjQ5OSwxNzQuNzYwMjc5OCc7XG4gIC8vIFRoaXMgdmFsdWUgd2lsbCBiZSBhIHZhcmlhYmxlXG4gIGNvbnN0IHJhZGl1cyA9ICcmcmFkaXVzPScgKyByYWQ7XG4gIC8vIFRoaXMgdmFsdWUgd2lsbCBiZSBhIHZhcmlhYmxlXG4gIGNvbnN0IGNhdGVnb3J5SWQgPSAnJmNhdGVnb3J5SWQ9JyArIGNhdDtcbiAgLy8gUHV0IGFsbCB0aGUgcGllY2VzIHRvZ2V0aGVyXG4gIGNvbnN0IHJlcXVlc3RVUkkgPSBiYXNlVVJJICsgY2xpZW50X2lkICsgY2xpZW50X3NlY3JldCArIGxhdGxvbmcgKyByYWRpdXMgKyBjYXRlZ29yeUlkO1xuICBcbiAgbWFrZVNlYXJjaFJlcXVlc3QocmVxdWVzdFVSSSk7XG59XG5cblxuLy8gU3RlcCA0IC0gTWFrZSB0aGUgYWN0dWFsIHJlcXVlc3RcbmZ1bmN0aW9uIG1ha2VTZWFyY2hSZXF1ZXN0KHVyaSkge1xuICBmZXRjaCh1cmkpXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbihteUpzb24pIHtcbiAgICAgIGV4dHJhY3ROZWVkZWREYXRhKG15SnNvbi5yZXNwb25zZS52ZW51ZXMpO1xuICAgICAgLy9jb25zb2xlLmxvZyhteUpzb24ucmVzcG9uc2UudmVudWVzKTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgLy8gQ29kZSBmb3IgaGFuZGxpbmcgZXJyb3JzXG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfSk7XG59XG5cblxuLy8gU3RlcCA1IC0gRXh0cmFjdCB0aGUgZGF0YSB3ZSBhcmUgdXNpbmcgZnJvbSB0aGUganNvbiByZXNwb25zZVxuZnVuY3Rpb24gZXh0cmFjdE5lZWRlZERhdGEoZGF0YSkge1xuICBjb25zb2xlLmxvZyhkYXRhKTtcblxuICAvLyBkZWNsYXJlIGVtcHR5IGFycmF5XG4gIGNvbnN0IHZlbnVlc0Zvck1hcCA9IFtdO1xuXG4gIC8vIExvb3AgdGhyb3VnaCBqc29uIHJlc3BvbnNlXG4gIGRhdGEuZm9yRWFjaCh2ZW51ZSA9PiB7XG5cbiAgICAvLyBQdXNoIHRoZSBuYW1lLCBJRCwgYW5kIGxhdGxuZyBpbnRvIGFuIGFycmF5IHRvIHVzZSBmb3IgdGhlIG1hcFxuICAgIHZlbnVlc0Zvck1hcC5wdXNoKHtcbiAgICAgIG5hbWU6IHZlbnVlLm5hbWUsXG4gICAgICBpZDogdmVudWUuaWQsXG4gICAgICBsYXRsbmc6IFxuICAgICAgICBbXG4gICAgICAgICAgdmVudWUubG9jYXRpb24ubGF0LFxuICAgICAgICAgIHZlbnVlLmxvY2F0aW9uLmxuZ1xuICAgICAgICBdXG4gICAgICBcbiAgICB9KTtcbiAgfSk7XG5cbiAgY3JlYXRlTWFwKHZlbnVlc0Zvck1hcCk7XG59XG5cblxuXG5cbiAgXG4vLyBUaW0ncyB3b3JrIFNUQVJUXG4vLyBDYXRlZ29yaWVzOlxuLy8gUGFya3M6IDRiZjU4ZGQ4ZDQ4OTg4ZDE2Mzk0MTczNVxuLy8gQmVhY2hlczogNGJmNThkZDhkNDg5ODhkMWUyOTQxNzM1XG4vLyBQb29sczogNGJmNThkZDhkNDg5ODhkMTVlOTQxNzM1XG4vLyBTY2VuaWMgTG9va291dDogNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1XG4vLyBTa2F0ZSBQYXJrOiA0YmY1OGRkOGQ0ODk4OGQxNjc5NDE3MzVcblxuXG4vLyBJZGVudGlmaWVyc1xuLy8gRXZlcnkgSUQgcHJlZml4ZWQgd2l0aCAnanMnIGlzIGEgRE9NIGVsZW1lbnRcbmNvbnN0IGpzQ2F0RHJvcGRvd24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanNDYXREcm9wZG93bicpO1xuY29uc3QganNDYXRUcmVuZGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqc0NhdFRyZW5kaW5nJyk7XG5jb25zdCBqc0NhdFBhcmtzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzQ2F0UGFya3MnKTtcbmNvbnN0IGpzQ2F0QmVhY2hlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqc0NhdEJlYWNoZXMnKTtcbmNvbnN0IGpzQ2F0TG9va291dHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanNDYXRMb29rb3V0cycpO1xuLy8gTW9kYWwgaWRlbnRpZmllcnNcbnZhciBtb2RhbENvbnRlbnRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxDb250ZW50Q29udGFpbmVyJyk7XG52YXIgbW9kYWxDb250ZW50Rm9vdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsQ29udGVudEZvb3RlcicpO1xuY29uc3QganNQb3BVcEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCcjbW9kYWxDZW50ZXInKTtcbmNvbnN0IGpzTW9kYWxMb25nVGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanNNb2RhbExvbmdUaXRsZScpO1xuY29uc3QganNWZW51ZUltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqc1ZlbnVlSW1nJyk7XG5jb25zdCBqc1ZlbnVlRGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanNWZW51ZURlc2NyaXB0aW9uJyk7XG5jb25zdCBqc1ZlbnVlV2Vic2l0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqc1ZlbnVlV2Vic2l0ZScpO1xuY29uc3QganNNaW5pTWFwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzTWluaU1hcCcpO1xuY29uc3QganNEaXJlY3Rpb25zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzRGlyZWN0aW9ucycpO1xuLy8gdGhpcyBuZWVkcyB0byBiZSBhIGdsb2JhbCB2YXJpYWJsZSBpbiBvcmRlciB0byBhY2Nlc3MgaXQgZnJvbSBkaWZmZXJlbnQgZnVuY3Rpb25zXG5sZXQgbXltYXA7XG5sZXQgem9vbSA9IDA7XG4vLyBUaW0ncyB3b3JrIEVORFxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiRE9NIHJlYWR5IVwiKTtcblxuICAvLyBpZGVudGlmeSB0aGUgZXZlbnQgdGFyZ2V0XG4gIGpzQ2F0RHJvcGRvd24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGlkZW50aWZ5Q2F0ZWdvcnkoZS50YXJnZXQpO1xuICB9KTtcblxuICAvLyBMb2FkIHRoZSBlbXB0eSBtYXAgb24gcGFnZSBsb2FkXG4gIGNyZWF0ZUluaXRpYWxNYXAoKTtcblxufSk7XG5cblxuLy8gRGV0ZWN0IHNjcmVlbiB3aWR0aCBhbmQgY2hhbmdlIHpvb20gYWNjb3JkaW5nbHkgLSBieSBOaWtpdGFcbmZ1bmN0aW9uIGRldGVjdFNjcmVlbldpZHRoKCkge1xuXG4gIGlmICgkKHdpbmRvdykud2lkdGgoKSA8IDc2OCkge1xuICAgIGxldCB6b29tID0gMTA7XG4gICAgY29uc29sZS5sb2coJ3NjcmVlbiBzaXplIGlzIGxlc3MgdGhhbiA3NjhweCcpO1xuICAgIHJldHVybiB6b29tO1xuICB9XG4gIGVsc2Uge1xuICAgIGxldCB6b29tID0gMTE7XG4gICAgY29uc29sZS5sb2coJ3NjcmVlbiBzaXplIGlzIGxlc3MgdGhhbiA3NjhweCcpO1xuICAgIHJldHVybiB6b29tO1xuICB9O1xufVxuXG5cbmZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxNYXAoKSB7XG5cbiAgLy8gZGV0ZWN0IHNjcmVlbiBzaXplXG4gIGxldCB6ID0gZGV0ZWN0U2NyZWVuV2lkdGgoKTtcblxuICAvLyBNYXAgd29yayBieSBOaWtpdGEgU1RBUlRcbiAgbGV0IGNlbnRlciA9IFstMzYuODk3NzkzMSwgMTc0Ljc4NTQ5NzNdO1xuICBteW1hcCA9IEwubWFwKCdtYXBpZCcpLnNldFZpZXcoY2VudGVyLCB6KTtcblxuICBMLnRpbGVMYXllcignaHR0cHM6Ly9hcGkudGlsZXMubWFwYm94LmNvbS92NC97aWR9L3t6fS97eH0ve3l9LnBuZz9hY2Nlc3NfdG9rZW49cGsuZXlKMUlqb2lkR2hoYkhsNE9UQWlMQ0poSWpvaVkybzJZamRyWkhSbE1XSm1Zakp5YkRkMmNXMXJZblZuTlNKOS5qX0RRTGZpeEhmaGlvVmpINnFtcWt3Jywge1xuICAgIGF0dHJpYnV0aW9uOiAnTWFwIGRhdGEgJmNvcHk7IDxhIGhyZWY9XCJodHRwczovL3d3dy5vcGVuc3RyZWV0bWFwLm9yZy9cIj5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMsIDxhIGhyZWY9XCJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMi4wL1wiPkNDLUJZLVNBPC9hPiwgSW1hZ2VyeSDCqSA8YSBocmVmPVwiaHR0cHM6Ly93d3cubWFwYm94LmNvbS9cIj5NYXBib3g8L2E+JyxcbiAgICBtYXhab29tOiAxOCxcbiAgICBpZDogJ21hcGJveC5zdHJlZXRzJyxcbiAgICBhY2Nlc3NUb2tlbjogJ3BrLmV5SjFJam9pYm1scmFYUmhhRzlwYm1Weklpd2lZU0k2SW1OcWMyMDNjSE41TkRFd2FHZzBPWEJwWW5FMGFYaGhabVlpZlEuNThsOGRVWmc0dWlGbjdCWW5aQ0pGQSdcbiAgfSkuYWRkVG8obXltYXApO1xuXG4gIC8vIHJhZGl1c1xuICBMLmNpcmNsZShjZW50ZXIsIHtcbiAgICByYWRpdXM6IDIxNTAwLFxuICAgIGNvbG9yOiAnc2FsbW9uJyxcbiAgICB3ZWlnaHQ6IDEsXG4gICAgZmlsbDogdHJ1ZVxuICB9KS5hZGRUbyhteW1hcCk7XG4gIC8vIE1hcCB3b3JrIGJ5IE5pa2l0YSBFTkRcbn1cblxuZnVuY3Rpb24gY3JlYXRlTWFwKHYpIHtcblxuICAvLyBkZXRlY3Qgc2NyZWVuIHNpemVcbiAgbGV0IHogPSBkZXRlY3RTY3JlZW5XaWR0aCgpO1xuXG4gIC8vIHJlbW92ZSBwcmV2aW91c2x5IGxvYWRlZCBtYXAgZmlyc3RcbiAgaWYgKG15bWFwKSB7XG4gICAgbXltYXAucmVtb3ZlKCk7XG4gIH1cblxuICAvLyBNYXAgd29yayBieSBOaWtpdGEgU1RBUlRcbiAgbGV0IGNlbnRlciA9IFstMzYuODk3NzkzMSwgMTc0Ljc4NTQ5NzNdO1xuICBteW1hcCA9IEwubWFwKCdtYXBpZCcpLnNldFZpZXcoY2VudGVyLCB6KTtcblxuICBMLnRpbGVMYXllcignaHR0cHM6Ly9hcGkudGlsZXMubWFwYm94LmNvbS92NC97aWR9L3t6fS97eH0ve3l9LnBuZz9hY2Nlc3NfdG9rZW49cGsuZXlKMUlqb2lkR2hoYkhsNE9UQWlMQ0poSWpvaVkybzJZamRyWkhSbE1XSm1Zakp5YkRkMmNXMXJZblZuTlNKOS5qX0RRTGZpeEhmaGlvVmpINnFtcWt3Jywge1xuICAgIGF0dHJpYnV0aW9uOiAnTWFwIGRhdGEgJmNvcHk7IDxhIGhyZWY9XCJodHRwczovL3d3dy5vcGVuc3RyZWV0bWFwLm9yZy9cIj5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMsIDxhIGhyZWY9XCJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMi4wL1wiPkNDLUJZLVNBPC9hPiwgSW1hZ2VyeSDCqSA8YSBocmVmPVwiaHR0cHM6Ly93d3cubWFwYm94LmNvbS9cIj5NYXBib3g8L2E+JyxcbiAgICBtYXhab29tOiAxOCxcbiAgICBpZDogJ21hcGJveC5zdHJlZXRzJyxcbiAgICBhY2Nlc3NUb2tlbjogJ3BrLmV5SjFJam9pYm1scmFYUmhhRzlwYm1Weklpd2lZU0k2SW1OcWMyMDNjSE41TkRFd2FHZzBPWEJwWW5FMGFYaGhabVlpZlEuNThsOGRVWmc0dWlGbjdCWW5aQ0pGQSdcbiAgfSkuYWRkVG8obXltYXApO1xuXG4gIC8vIHJhZGl1c1xuICBMLmNpcmNsZShjZW50ZXIsIHtcbiAgICByYWRpdXM6IDIxNTAwLFxuICAgIGNvbG9yOiAnc2FsbW9uJyxcbiAgICB3ZWlnaHQ6IDEsXG4gICAgZmlsbDogdHJ1ZVxuICB9KS5hZGRUbyhteW1hcCk7XG5cbiAgLy8gbmlraXRhIC0gcHV0dGluZyBtYXJrZXJzIG9uIHRoZSBtYXBcbiAgdi5mb3JFYWNoKGZ1bmN0aW9uICh2ZW51ZSkge1xuICAgIHRyeSB7XG4gICAgICB2YXIgc2VydmljZUljb24gPSBMLmljb24oe1xuICAgICAgICBpY29uVXJsOiAnLi4vYnVpbGQvaW1nL3Bpbi5zdmcnLFxuICAgICAgICBpY29uU2l6ZTogWzcyLCA3Ml0sXG4gICAgICAgIHBvcHVwQW5jaG9yOiBbMCwgLTM2XVxuICAgICAgfSk7XG4gICAgICB2YXIgbWFya2VyID0gTC5tYXJrZXIodmVudWUubGF0bG5nLCB7IGljb246IHNlcnZpY2VJY29uIH0pLmFkZFRvKG15bWFwKTtcbiAgICAgIG1hcmtlci5iaW5kUG9wdXAoJzxkaXY+JyArIHZlbnVlLm5hbWUgKyAnPC9kaXY+JyArICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBpZD1cIicrIHZlbnVlLmlkICsnXCIgY2xhc3M9XCJidG4gYnRuLXByaW1hcnkgcG9wdXBCdXR0b25cIiBkYXRhLXRvZ2dsZT1cIm1vZGFsXCIgZGF0YS10YXJnZXQ9XCIjbW9kYWxDZW50ZXJcIj4nICsgJ0V4cGxvcmUnICsgJzwvYnV0dG9uPicpXG5cbiAgICAgIC8vbG91ZWxsYSAtIHRhcmdldCBwb3AgdXAgYnV0dG9uIHRvIHBvcHVsYXRlIGRldGFpbHNcbiAgICAgIGNvbnN0IHZlcnNpb24gPSAnP3Y9MjAxNzA5MDEnO1xuICAgICAgY29uc3Qga2V5ID0gdmVyc2lvbiArIGNsaWVudF9pZCArIGNsaWVudF9zZWNyZXQ7XG4gICAgICBjb25zdCB2ZW51ZUlkID0gdmVudWUuaWQ7XG4gICAgICBjb25zdCBiYXNlVVJMID0gJ2h0dHBzOi8vYXBpLmZvdXJzcXVhcmUuY29tL3YyL3ZlbnVlcy8nO1xuICAgICAgbGV0IHZlbnVlVXJsID0gYmFzZVVSTCArIHZlbnVlSWQgKyBrZXk7XG5cbiAgICAgIG1hcmtlci5vbigncG9wdXBvcGVuJywgKCkgPT4ge1xuICAgICAgICAvLyBwb3AgdXAgYnV0dG9uXG4gICAgICAgIGNvbnN0IGpzUG9wVXBCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh2ZW51ZS5pZCk7XG4gICAgICAgIC8vIGNsaWNrIGZ1bmN0aW9uXG4gICAgICAgIGpzUG9wVXBCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0KTtcbiAgICAgICAgICAvL0FkZCB2ZW51ZSBkZXRhaWxzIHRocm91Z2ggQVBJIGNhbGxcbiAgICAgICAgICBmZXRjaFZlbnVlKHZlbnVlVXJsKTtcbiAgICAgICAgfSk7XG4gICAgICB9KVxuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH0pO1xufVxuXG5cbi8vIFN0ZXAgNCAtIE1ha2UgdGhlIGFjdHVhbCByZXF1ZXN0XG5mdW5jdGlvbiBmZXRjaFZlbnVlKHVyaSkge1xuICBmZXRjaCh1cmkpXG4gICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAvLyBhLiByZXR1cm4gcmVzcG9uc2UgaW4ganNvbiBmb3JtYXRcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbiAobXlKc29uKSB7XG4gICAgICAvLyBiLiBleHRyYWN0IGRhdGEgZnJvbSByZXNwb25zZSBhbmQgcnVuIHRoaXMgZnVuY3Rpb25cbiAgICAgIHZlbnVlRGV0YWlscyhteUpzb24ucmVzcG9uc2UpO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgLy8gQ29kZSBmb3IgaGFuZGxpbmcgZXJyb3JzXG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHZlbnVlRGV0YWlscyhyZXMpIHtcbiAgd2luZG93LmZha2UgPSByZXM7XG4gIC8vIE1vZGFsIHRpdGxlXG4gIGNvbnN0IHRpdGxlID0gcmVzLnZlbnVlLm5hbWU7XG4gIC8vIFZlbnVlIGRlc2NyaXB0aW9uXG4gIGlmIChyZXMudmVudWUuZGVzY3JpcHRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBkZXNjcmlwdGlvbiA9IHJlcy52ZW51ZS5kZXNjcmlwdGlvbjtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZGVzY3JpcHRpb24gPSAnVGhpcyB2ZW51ZSBkb2VzIG5vdCBoYXZlIGEgZGVzY3JpcHRpb24nO1xuICB9XG4gIC8vQ29uc3RydWN0IG1vZGFsIGltYWdlL1xuICBpZiAocmVzLnZlbnVlLmJlc3RQaG90byAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHBob3RvUHJlZml4ID0gcmVzLnZlbnVlLmJlc3RQaG90by5wcmVmaXg7XG4gICAgdmFyIHBob3RvU3VmZml4ID0gcmVzLnZlbnVlLmJlc3RQaG90by5zdWZmaXg7XG4gICAgdmFyIHZlbnVlSW1hZ2UgPSBwaG90b1ByZWZpeCArICc3MjB4NzIwJyArIHBob3RvU3VmZml4O1xuICB9IGVsc2Uge1xuICAgIHZhciB2ZW51ZUltYWdlID0gJ3NyYy9pbWcvZG9nLTMuanBnJztcbiAgfVxuICAvLyBBZGQgd2Vic2l0ZVxuICBpZiAocmVzLnZlbnVlLnNob3J0VXJsICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgd2Vic2l0ZSA9IHJlcy52ZW51ZS5zaG9ydFVybDtcbiAgfVxuICAvLyBBZGQgYWRkcmVzc1xuICBpZiAocmVzLnZlbnVlLmxvY2F0aW9uLmFkZHJlc3MgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBhZGRyZXNzID0gcmVzLnZlbnVlLmxvY2F0aW9uLmFkZHJlc3MgKyAnLCAnICsgcmVzLnZlbnVlLmxvY2F0aW9uLmNpdHk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGFkZHJlc3MgPSAnVGhpcyB2ZW51ZSBkb2VzIG5vdCBoYXZlIGFuIGFkZHJlc3MnO1xuICB9XG4gIC8vIEFkZGluZyBNaW5pIE1hcFxuICAvLyBJbnNlcnQgTWluaSBtYXAgd2l0aCB1c2VyIGxvY2F0aW9uIGh0dHBzOi8vbGVhZmxldGpzLmNvbS9yZWZlcmVuY2UtMS4wLjAuaHRtbFxuICBsZXQgdmVudWVMb2NhdGlvbiA9IFtyZXMudmVudWUubG9jYXRpb24ubGF0LCByZXMudmVudWUubG9jYXRpb24ubG5nXTtcbiAgbGV0IG1pbmlNYXAgPSBMLm1hcCgnanNNaW5pTWFwJywge1xuICAgIHNjcm9sbFdoZWVsWm9vbTogZmFsc2VcbiAgfSkuc2V0Vmlldyh2ZW51ZUxvY2F0aW9uLCAxNyk7XG4gIEwudGlsZUxheWVyKCdodHRwczovL2FwaS50aWxlcy5tYXBib3guY29tL3Y0L3tpZH0ve3p9L3t4fS97eX0ucG5nP2FjY2Vzc190b2tlbj17YWNjZXNzVG9rZW59Jywge1xuICAgIGF0dHJpYnV0aW9uOiAnTWFwIGRhdGEgJmNvcHk7IDxhIGhyZWY9XCJodHRwczovL3d3dy5vcGVuc3RyZWV0bWFwLm9yZy9cIj5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMsIDxhIGhyZWY9XCJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMi4wL1wiPkNDLUJZLVNBPC9hPiwgSW1hZ2VyeSDCqSA8YSBocmVmPVwiaHR0cHM6Ly93d3cubWFwYm94LmNvbS9cIj5NYXBib3g8L2E+JyxcbiAgICBtYXhab29tOiAxOCxcbiAgICBpZDogJ21hcGJveC5zdHJlZXRzJyxcbiAgICBhY2Nlc3NUb2tlbjogJ3BrLmV5SjFJam9pYm1scmFYUmhhRzlwYm1Weklpd2lZU0k2SW1OcWMyMDNjSE41TkRFd2FHZzBPWEJwWW5FMGFYaGhabVlpZlEuNThsOGRVWmc0dWlGbjdCWW5aQ0pGQSdcbiAgfSkuYWRkVG8obWluaU1hcCk7XG4gIC8vIERpcmVjdGlvbnNcbiAgY29uc3QgZGlyZWN0aW9ucyA9ICdodHRwOi8vd3d3Lmdvb2dsZS5jb20vbWFwcy9wbGFjZS8nICsgcmVzLnZlbnVlLmxvY2F0aW9uLmxhdCArICcsJyArIHJlcy52ZW51ZS5sb2NhdGlvbi5sbmc7XG4gIC8vIEluamVjdCB0ZW1wbGF0ZSB3aXRoIG1vZGFsIGNvbnRlbnRcbiAgY3JlYXRlTW9kYWxDb250ZW50KHRpdGxlLCB2ZW51ZUltYWdlLCBkZXNjcmlwdGlvbiwgYWRkcmVzcywgd2Vic2l0ZSwgZGlyZWN0aW9ucyk7XG59O1xuXG4vLyBDcmVhdGUgTW9kYWwgY29udGVudFxuZnVuY3Rpb24gY3JlYXRlTW9kYWxDb250ZW50KHRpdGxlLCB2ZW51ZUltYWdlLCBkZXNjcmlwdGlvbiwgYWRkcmVzcywgd2Vic2l0ZSwgZGlyZWN0aW9ucykge1xuICAvLyBlbXB0eSBtb2RhbCBpZiBpdCBoYXMgY29udGVudHNcbiAgLy8gaWYoJCgnI21vZGFsQ2VudGVyJykpIHtcbiAgLy8gICAkKCcjbW9kYWxDZW50ZXInKS5lbXB0eSgpO1xuICAvLyB9XG5cblxuICAvLyBtb2RhbCBjb250ZW50IHRlbXBsYXRlXG4gIG1vZGFsQ29udGVudENvbnRhaW5lci5pbm5lckhUTUwgPSBgXG4gIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cbiAgICA8aDUgY2xhc3M9XCJtb2RhbC10aXRsZVwiIGlkPVwianNNb2RhbExvbmdUaXRsZVwiPiR7dGl0bGV9PC9oNT5cbiAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIj5cbiAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPiZ0aW1lczs8L3NwYW4+XG4gICAgPC9idXR0b24+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiPlxuICAgIDxkaXYgY2xhc3M9XCJ2ZW51ZS1pdGVtXCI+XG4gICAgICA8aW1nIGNsYXNzPVwiZC1ibG9jayB3LTEwMFwiIGlkPVwianNWZW51ZUltZ1wiIHNyYz1cIiR7dmVudWVJbWFnZX1cIiBhbHQ9XCJtb2RhbC1leGFtcGxlXCI+XG4gICAgPC9kaXY+XG4gICAgPHAgaWQ9XCJqc1ZlbnVlRGVzY3JpcHRpb25cIj4ke2Rlc2NyaXB0aW9ufTwvcD5cbiAgICA8cCBjbGFzcz1cImpzVmVudWVBZGRyZXNzXCI+JHthZGRyZXNzfTwvcD5cbiAgICA8YSBjbGFzcz1cInByLTVcIiBpZD1cImpzVmVudWVXZWJzaXRlXCIgaHJlZj1cIiR7d2Vic2l0ZX1cIiB0YXJnZXQ9XCJfYmxhbmtcIj53ZWJzaXRlIGxpbms8L2E+XG4gICAgPGEgaHJlZj1cIiR7ZGlyZWN0aW9uc31cIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGlkPVwianNEaXJlY3Rpb25zXCIgdGFyZ2V0PVwiX2JsYW5rXCI+R2V0IERpcmVjdGlvbnM8L2E+XG4gIDwvZGl2PlxuICBgO1xuXG4gIC8vIE5vdyB0b2dnbGUgdGhlIE1vZGFsXG4gICQoJyNtb2RhbENlbnRlcicpLm1vZGFsKCdzaG93Jyk7XG59XG5jb25zdCB0cmVuZGluZyA9IHtcbiAgICBcIm1ldGFcIjoge1xuICAgICAgICBcImNvZGVcIjogMjAwLFxuICAgICAgICBcInJlcXVlc3RJZFwiOiBcIjVjYjY2MDMxNDQzNGI5NGQxZWFlZTQ3NlwiXG4gICAgfSxcbiAgICBcInJlc3BvbnNlXCI6IHtcbiAgICAgICAgXCJ2ZW51ZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwiaWRcIjogXCI1YmY2MjlmZTgxNjM1YjAwMmM5ZDcxYzBcIixcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJCcmlkZ2VtYW4gUmVzZXJ2ZVwiLFxuICAgICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3Nzk3NSxcbiAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc2MDk3LFxuICAgICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44Nzc5NzUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc2MDk3XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogOTcsXG4gICAgICAgICAgICAgICAgICAgIFwicG9zdGFsQ29kZVwiOiBcIjEwMjRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiY2l0eVwiOiBcIkF1Y2tsYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwic3RhdGVcIjogXCJBdWNrbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJBdWNrbGFuZCAxMDI0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRiZjU4ZGQ4ZDQ4OTg4ZDE2Mzk0MTczNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiUGFya1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiUGFya3NcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwic2hvcnROYW1lXCI6IFwiUGFya1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInByZWZpeFwiOiBcImh0dHBzOi8vc3MzLjRzcWkubmV0L2ltZy9jYXRlZ29yaWVzX3YyL3BhcmtzX291dGRvb3JzL3BhcmtfXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBcInByaW1hcnlcIjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBcInZlcmlmaWVkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImxhc3RDaGVja2luRXhwaXJlZEF0XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2MDQ5XCIsXG4gICAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgICBcImhhc1BlcmtcIjogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJpZFwiOiBcIjU1NTIzYzQ1NDk4ZTU4NWU5ZTE5NzAzOVwiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIk10LiBFZGVuIERvbWFpblwiLFxuICAgICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3NjEwNixcbiAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc2NTI2LFxuICAgICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44NzYxMDYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc2NTI2XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogNTI2LFxuICAgICAgICAgICAgICAgICAgICBcImNjXCI6IFwiTlpcIixcbiAgICAgICAgICAgICAgICAgICAgXCJuZWlnaGJvcmhvb2RcIjogXCJQb25zb25ieVwiLFxuICAgICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJOZXcgWmVhbGFuZFwiXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCI0YmY1OGRkOGQ0ODk4OGQxNjM5NDE3MzVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIlBhcmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicGx1cmFsTmFtZVwiOiBcIlBhcmtzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlBhcmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWNvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9wYXJrX1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic3VmZml4XCI6IFwiLnBuZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmltYXJ5XCI6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgXCJ2ZXJpZmllZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBcInN0YXRzXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXBDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcInVzZXJzQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJjaGVja2luc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwidmlzaXRzQ291bnRcIjogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJiZWVuSGVyZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiY291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJsYXN0Q2hlY2tpbkV4cGlyZWRBdFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcIm1hcmtlZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgXCJ1bmNvbmZpcm1lZENvdW50XCI6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwicmVmZXJyYWxJZFwiOiBcInYtMTU1NTQ1NjA0OVwiLFxuICAgICAgICAgICAgICAgIFwidmVudWVDaGFpbnNcIjogW10sXG4gICAgICAgICAgICAgICAgXCJoYXNQZXJrXCI6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwiaWRcIjogXCI0ZTMwYzg0NmZhNzYzOGU2NjEzMjU3NDlcIixcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJCaWcgS2luZyBSZXNlcnZlXCIsXG4gICAgICAgICAgICAgICAgXCJjb250YWN0XCI6IHt9LFxuICAgICAgICAgICAgICAgIFwibG9jYXRpb25cIjoge1xuICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODk1MTA2NDg5MTA0NzMsXG4gICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NDg0NjM1NjI5NDcxNyxcbiAgICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODk1MTA2NDg5MTA0NzMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc0ODQ2MzU2Mjk0NzE3XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMjExMixcbiAgICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiY291bnRyeVwiOiBcIk5ldyBaZWFsYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiZm9ybWF0dGVkQWRkcmVzc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRiZjU4ZGQ4ZDQ4OTg4ZDFlNTk0MTczNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiRG9nIFJ1blwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiRG9nIFJ1bnNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwic2hvcnROYW1lXCI6IFwiRG9nIFJ1blwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInByZWZpeFwiOiBcImh0dHBzOi8vc3MzLjRzcWkubmV0L2ltZy9jYXRlZ29yaWVzX3YyL3BhcmtzX291dGRvb3JzL2RvZ3J1bl9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTYwNDlcIixcbiAgICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGMzZmYzYTRhZjA1MmQ3ZjBhMmQ3Yjc5XCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiR3JpYmJsZWh1cnN0IFBhcmsgKEVkZW4gUnVnYnkgQ2x1YilcIixcbiAgICAgICAgICAgICAgICBcImNvbnRhY3RcIjoge30sXG4gICAgICAgICAgICAgICAgXCJsb2NhdGlvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44ODA1NTI5NjE5ODU3MixcbiAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0LjczODc0MTI2MDE2ODI0LFxuICAgICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44ODA1NTI5NjE5ODU3MixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzM4NzQxMjYwMTY4MjRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgXCJkaXN0YW5jZVwiOiAxOTI5LFxuICAgICAgICAgICAgICAgICAgICBcImNjXCI6IFwiTlpcIixcbiAgICAgICAgICAgICAgICAgICAgXCJjb3VudHJ5XCI6IFwiTmV3IFplYWxhbmRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJmb3JtYXR0ZWRBZGRyZXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiTmV3IFplYWxhbmRcIlxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImNhdGVnb3JpZXNcIjogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMTYzOTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJQYXJrXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJQYXJrc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzaG9ydE5hbWVcIjogXCJQYXJrXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImljb25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvcGFya19cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTYwNDlcIixcbiAgICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGM2NWY3NGY5Y2I4MmQ3ZjYzOTY4ZmQyXCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiTWFuZ2F3aGFpIGhlYWRzXCIsXG4gICAgICAgICAgICAgICAgXCJjb250YWN0XCI6IHt9LFxuICAgICAgICAgICAgICAgIFwibG9jYXRpb25cIjoge1xuICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODY1OTQ4NDMzMTM5MzQsXG4gICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NTM0NjU1NDAyMTE1NSxcbiAgICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODY1OTQ4NDMzMTM5MzQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc1MzQ2NTU0MDIxMTU1XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMTUzOCxcbiAgICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiY2l0eVwiOiBcIk1hbmdhd2hhaVwiLFxuICAgICAgICAgICAgICAgICAgICBcInN0YXRlXCI6IFwiTm9ydGhsYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiY291bnRyeVwiOiBcIk5ldyBaZWFsYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiZm9ybWF0dGVkQWRkcmVzc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBcIk1hbmdhd2hhaVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJOZXcgWmVhbGFuZFwiXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCI0YmY1OGRkOGQ0ODk4OGQxZTI5NDE3MzVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIkJlYWNoXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJCZWFjaGVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIkJlYWNoXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImljb25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvYmVhY2hfXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBcInByaW1hcnlcIjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBcInZlcmlmaWVkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImxhc3RDaGVja2luRXhwaXJlZEF0XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2MjkyXCIsXG4gICAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgICBcImhhc1BlcmtcIjogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRlZmU5NGZjYjYzNDZmZWFlYmI0ODQ4NlwiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIk9yZXdhIFN1cmYgQ2x1YlwiLFxuICAgICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3ODgyNjE5ODU4OTM1LFxuICAgICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzUyNDY2MDIwNzc0MixcbiAgICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODc4ODI2MTk4NTg5MzUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc1MjQ2NjAyMDc3NDJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgXCJkaXN0YW5jZVwiOiA2OTYsXG4gICAgICAgICAgICAgICAgICAgIFwiY2NcIjogXCJOWlwiLFxuICAgICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJOZXcgWmVhbGFuZFwiXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCI0YmY1OGRkOGQ0ODk4OGQxZTM5NDE3MzVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIlN1cmYgU3BvdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiU3VyZiBTcG90c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzaG9ydE5hbWVcIjogXCJTdXJmIFNwb3RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWNvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9zdXJmc3BvdF9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTYyOTJcIixcbiAgICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGI1MjA0ZTBmOTY0YTUyMGIwNjEyN2UzXCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiTW91bnQgRWRlbiAtIE1hdW5nYXdoYXVcIixcbiAgICAgICAgICAgICAgICBcImNvbnRhY3RcIjoge30sXG4gICAgICAgICAgICAgICAgXCJsb2NhdGlvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiYWRkcmVzc1wiOiBcIk1vdW50IEVkZW5cIixcbiAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3NzUwOTQwOTY2ODU1LFxuICAgICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzY0MzkyMzc1OTQ2MDQsXG4gICAgICAgICAgICAgICAgICAgIFwibGFiZWxlZExhdExuZ3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIjogXCJkaXNwbGF5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3NzUwOTQwOTY2ODU1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NjQzOTIzNzU5NDYwNFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICBcImRpc3RhbmNlXCI6IDM4NyxcbiAgICAgICAgICAgICAgICAgICAgXCJwb3N0YWxDb2RlXCI6IFwiMTAyNFwiLFxuICAgICAgICAgICAgICAgICAgICBcImNjXCI6IFwiTlpcIixcbiAgICAgICAgICAgICAgICAgICAgXCJjaXR5XCI6IFwiTXQgRWRlblwiLFxuICAgICAgICAgICAgICAgICAgICBcInN0YXRlXCI6IFwiQXVja2xhbmRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJjb3VudHJ5XCI6IFwiTmV3IFplYWxhbmRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJmb3JtYXR0ZWRBZGRyZXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiTW91bnQgRWRlblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJNdCBFZGVuIDEwMjRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiTmV3IFplYWxhbmRcIlxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImNhdGVnb3JpZXNcIjogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGViMWQ0ZDU0YjkwMGQ1NmM4OGE0NWZjXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJNb3VudGFpblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiTW91bnRhaW5zXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIk1vdW50YWluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImljb25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvbW91bnRhaW5fXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBcInByaW1hcnlcIjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBcInZlcmlmaWVkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImxhc3RDaGVja2luRXhwaXJlZEF0XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2NjQxXCIsXG4gICAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgICBcImhhc1BlcmtcIjogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRmMDY4Y2QxOWFkZjNkZWY3MjE2ZWEyN1wiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIkJhbGNvbmFqZVwiLFxuICAgICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJhZGRyZXNzXCI6IFwiUmVtdWVyYSBSZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODc0MDM2OTg3NDMxNDgsXG4gICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43ODI1OTY5MDcwMzQ5OSxcbiAgICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODc0MDM2OTg3NDMxNDgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc4MjU5NjkwNzAzNDk5XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMjA1MixcbiAgICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiY291bnRyeVwiOiBcIk5ldyBaZWFsYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiZm9ybWF0dGVkQWRkcmVzc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlJlbXVlcmEgUmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiTmV3IFplYWxhbmRcIlxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImNhdGVnb3JpZXNcIjogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJTY2VuaWMgTG9va291dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiU2NlbmljIExvb2tvdXRzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlNjZW5pYyBMb29rb3V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImljb25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvc2NlbmljbG9va291dF9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTY2NDFcIixcbiAgICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGYyOGM2MDZlNGIwM2EzNzY3MWU2MWRjXCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiQmFzc2V0dCBSZFwiLFxuICAgICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJhZGRyZXNzXCI6IFwiQmFzc2V0dCBSZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODY5NzcyLFxuICAgICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzgyNjI2LFxuICAgICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44Njk3NzIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc4MjYyNlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICBcImRpc3RhbmNlXCI6IDIyMjEsXG4gICAgICAgICAgICAgICAgICAgIFwiY2NcIjogXCJOWlwiLFxuICAgICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJCYXNzZXR0IFJkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRiZjU4ZGQ4ZDQ4OTg4ZDE2NTk0MTczNVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiU2NlbmljIExvb2tvdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicGx1cmFsTmFtZVwiOiBcIlNjZW5pYyBMb29rb3V0c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJzaG9ydE5hbWVcIjogXCJTY2VuaWMgTG9va291dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInByZWZpeFwiOiBcImh0dHBzOi8vc3MzLjRzcWkubmV0L2ltZy9jYXRlZ29yaWVzX3YyL3BhcmtzX291dGRvb3JzL3NjZW5pY2xvb2tvdXRfXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBcInByaW1hcnlcIjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBcInZlcmlmaWVkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwidXNlcnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcImxhc3RDaGVja2luRXhwaXJlZEF0XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2NjQxXCIsXG4gICAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgICBcImhhc1BlcmtcIjogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRkOWQxYWJiOGVmYWExNDNmYTRkNWViN1wiLFxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIk10IFN0IEpvaG4gU3VtbWl0XCIsXG4gICAgICAgICAgICAgICAgXCJjb250YWN0XCI6IHt9LFxuICAgICAgICAgICAgICAgIFwibG9jYXRpb25cIjoge1xuICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODgzNDA1NTUzNjY4NDksXG4gICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43ODA3MjEyMDEwNzMyOCxcbiAgICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODgzNDA1NTUzNjY4NDksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc4MDcyMTIwMTA3MzI4XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMTg5NSxcbiAgICAgICAgICAgICAgICAgICAgXCJwb3N0YWxDb2RlXCI6IFwiMTAyNFwiLFxuICAgICAgICAgICAgICAgICAgICBcImNjXCI6IFwiTlpcIixcbiAgICAgICAgICAgICAgICAgICAgXCJjaXR5XCI6IFwiQXVja2xhbmRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJzdGF0ZVwiOiBcIkF1Y2tsYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiY291bnRyeVwiOiBcIk5ldyBaZWFsYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiZm9ybWF0dGVkQWRkcmVzc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBcIkF1Y2tsYW5kIDEwMjRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiTmV3IFplYWxhbmRcIlxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcImNhdGVnb3JpZXNcIjogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJTY2VuaWMgTG9va291dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiU2NlbmljIExvb2tvdXRzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlNjZW5pYyBMb29rb3V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcImljb25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvc2NlbmljbG9va291dF9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTY2NDFcIixcbiAgICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBcImlkXCI6IFwiNTE0YzBiMmRlNGIwY2NmNjVmY2U5OGU2XCIsXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiR3JpYmJsZWhpcnN0IFBhcmtcIixcbiAgICAgICAgICAgICAgICBcImNvbnRhY3RcIjoge30sXG4gICAgICAgICAgICAgICAgXCJsb2NhdGlvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44NzI0NjcwNDE1MzE1MzYsXG4gICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NTAyMjcyMzc4MTQyMixcbiAgICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODcyNDY3MDQxNTMxNTM2LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NTAyMjcyMzc4MTQyMlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICBcImRpc3RhbmNlXCI6IDExMjksXG4gICAgICAgICAgICAgICAgICAgIFwiY2NcIjogXCJOWlwiLFxuICAgICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJOZXcgWmVhbGFuZFwiXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCI0YmY1OGRkOGQ0ODk4OGQxNjM5NDE3MzVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIlBhcmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwicGx1cmFsTmFtZVwiOiBcIlBhcmtzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlBhcmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaWNvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9wYXJrX1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic3VmZml4XCI6IFwiLnBuZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmltYXJ5XCI6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgXCJ2ZXJpZmllZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBcInN0YXRzXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJ0aXBDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcInVzZXJzQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJjaGVja2luc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICAgIFwidmlzaXRzQ291bnRcIjogMFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJiZWVuSGVyZVwiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiY291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgICAgXCJsYXN0Q2hlY2tpbkV4cGlyZWRBdFwiOiAwLFxuICAgICAgICAgICAgICAgICAgICBcIm1hcmtlZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgXCJ1bmNvbmZpcm1lZENvdW50XCI6IDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwicmVmZXJyYWxJZFwiOiBcInYtMTU1NTQ1NjY5NFwiLFxuICAgICAgICAgICAgICAgIFwidmVudWVDaGFpbnNcIjogW10sXG4gICAgICAgICAgICAgICAgXCJoYXNQZXJrXCI6IGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgXSxcbiAgICAgICAgXCJjb25maWRlbnRcIjogZmFsc2VcbiAgICB9XG59Il0sImZpbGUiOiJhcHAubWluLmpzIn0=
