const client_id="&client_id=NTVGVUVVSZ5YDPGPAQF5STMX4NC25NYT1S3X1O5MEOG3GGYG",client_secret="&client_secret=BEWE5CHPVGE31A1WIDLOZBEDO1K2MFP5I4KCU1EMW3EMG02T";function identifyCategory(e){let t='0',a='0';'jsCatTrending'==e.id?extractNeededData(trending.response.venues):'jsCatParks'==e.id?createSearchRequestURI(t='2000',a='4bf58dd8d48988d163941735'):'jsCatBeaches'==e.id?createSearchRequestURI(t='2000',a='4bf58dd8d48988d1e2941735'):'jsCatLookouts'==e.id?createSearchRequestURI(t='2000',a='4bf58dd8d48988d165941735'):'jsCatTrending'==e.id&&extractNeededData(trending.response.venues)}function createSearchRequestURI(e,t){makeSearchRequest('https://api.foursquare.com/v2/venues/search?v=20170901'+client_id+client_secret+('&ll='+currentUserLocStr)+('&radius='+e)+('&categoryId='+t))}function makeSearchRequest(e){fetch(e).then(function(e){return e.json()}).then(function(e){extractNeededData(e.response.venues),console.log(e.response)}).catch(function(e){console.log(e)})}function extractNeededData(e){const t=[];e.forEach(e=>{t.push({name:e.name,id:e.id,latlng:[e.location.lat,e.location.lng]})}),createMap(t)}const jsCatDropdown=document.getElementById('jsCatDropdown'),jsCatTrending=document.getElementById('jsCatTrending'),jsCatParks=document.getElementById('jsCatParks'),jsCatBeaches=document.getElementById('jsCatBeaches'),jsCatLookouts=document.getElementById('jsCatLookouts');var modalContentContainer=document.getElementById('modalContentContainer');let mymap,miniMap,currentUserLoc=[-36.8977931,174.7854973],currentUserLocStr='',zoom=0;function detectScreenWidth(){if($(window).width()<768){let e=10;return console.log('screen size is less than 768px'),e}{let e=11;return console.log('screen size is less than 768px'),e}}function createInitialMap(){let e=detectScreenWidth(),t=[-36.8977931,174.7854973];mymap=L.map('mapid').setView(t,e),createMapPart(t),mymap.locate({setView:!0,maxZoom:16}),mymap.on('locationfound',onLocationFound)}function createMap(e){let t=detectScreenWidth();mymap&&mymap.remove();let a=currentUserLoc;mymap=L.map('mapid').setView(a,t),createMapPart(a),mymap.locate({setView:!0,maxZoom:t}),mymap.on('locationfound',onLocationFound),e.forEach(function(e){try{var t=L.icon({iconUrl:'../build/img/pin.svg',iconSize:[72,72],popupAnchor:[0,-36]}),a=L.marker(e.latlng,{icon:t}).addTo(mymap);a.bindPopup('<div>'+e.name+"</div><button type=\"button\" id=\""+e.id+"\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalCenter\">Explore</button>");const n='?v=20170901'+client_id+client_secret,o=e.id;let s='https://api.foursquare.com/v2/venues/'+o+n;a.on('popupopen',()=>{document.getElementById(o).addEventListener('click',e=>{console.log(e.target),fetchVenue(s)})})}catch(e){console.log(e)}})}function createMapPart(e){L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoidGhhbHl4OTAiLCJhIjoiY2o2YjdrZHRlMWJmYjJybDd2cW1rYnVnNSJ9.j_DQLfixHfhioVjH6qmqkw',{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',maxZoom:18,id:'mapbox.streets',accessToken:'pk.eyJ1IjoibmlraXRhaG9pbmVzIiwiYSI6ImNqc203cHN5NDEwaGg0OXBpYnE0aXhhZmYifQ.58l8dUZg4uiFn7BYnZCJFA'}).addTo(mymap),L.circle(e,{radius:21500,color:'salmon',weight:1,fill:!0}).addTo(mymap)}function onLocationFound(e){var t=e.accuracy/2;L.marker(e.latlng).addTo(mymap).bindPopup("You are within "+t+" meters from this point").openPopup(),L.circle(e.latlng,t).addTo(mymap),currentUserLoc=[e.latlng.lat,e.latlng.lng],currentUserLocStr=currentUserLoc.toString()}function fetchVenue(e){fetch(e).then(function(e){return e.json()}).then(function(e){venueDetails(e.response)}).catch(function(e){console.log(e)})}function venueDetails(e){window.fake=e;const t=e.venue.name;if(void 0!==e.venue.description)var a=e.venue.description;else a='This venue does not have a description';if(void 0!==e.venue.bestPhoto)var n=e.venue.bestPhoto.prefix+'720x720'+e.venue.bestPhoto.suffix;else n='src/img/dog-3.jpg';if(void 0!==e.venue.shortUrl)var o=e.venue.shortUrl;if(void 0!==e.venue.location.address&&void 0!==e.venue.location.city)var s=e.venue.location.address+', '+e.venue.location.city;else s='This venue does not have an address';miniMap&&miniMap.remove();let i=[e.venue.location.lat,e.venue.location.lng];miniMap=L.map('jsMiniMap',{scrollWheelZoom:!1}).setView(i,17),L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',{attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',maxZoom:18,id:'mapbox.streets',accessToken:'pk.eyJ1IjoibmlraXRhaG9pbmVzIiwiYSI6ImNqc203cHN5NDEwaGg0OXBpYnE0aXhhZmYifQ.58l8dUZg4uiFn7BYnZCJFA'}).addTo(miniMap),createModalContent(t,n,a,s,o,'http://www.google.com/maps/place/'+e.venue.location.lat+','+e.venue.location.lng)}function createModalContent(e,t,a,n,o,s){for(;modalContentContainer.firstElementChild;)modalContentContainer.removeChild(modalContentContainer.firstChild);modalContentContainer.innerHTML=`\n  <div class="modal-header">\n    <h5 class="modal-title" id="jsModalLongTitle">${e}</h5>\n    <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n      <span aria-hidden="true">&times;</span>\n    </button>\n  </div>\n  <div class="modal-body">\n    <div class="venue-item">\n      <img class="d-block w-100" id="jsVenueImg" src="${t}" alt="modal-example">\n    </div>\n    <p id="jsVenueDescription">${a}</p>\n    <p class="jsVenueAddress">${n}</p>\n    <a class="pr-5" id="jsVenueWebsite" href="${o}" target="_blank">website link</a>\n    <a href="${s}" class="btn btn-primary" id="jsDirections" target="_blank">Get Directions</a>\n  </div>\n  `,$('#modalCenter').modal('show')}document.addEventListener("DOMContentLoaded",()=>{console.log("DOM ready!"),jsCatDropdown.addEventListener('click',e=>{identifyCategory(e.target)}),createInitialMap()});const trending={meta:{code:200,requestId:"5cb660314434b94d1eaee476"},response:{venues:[{id:"5bf629fe81635b002c9d71c0",name:"Bridgeman Reserve",contact:{},location:{lat:-36.877975,lng:174.76097,labeledLatLngs:[{label:"display",lat:-36.877975,lng:174.76097}],distance:97,postalCode:"1024",cc:"NZ",city:"Auckland",state:"Auckland",country:"New Zealand",formattedAddress:["Auckland 1024","New Zealand"]},categories:[{id:"4bf58dd8d48988d163941735",name:"Park",pluralName:"Parks",shortName:"Park",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456049",venueChains:[],hasPerk:!1},{id:"55523c45498e585e9e197039",name:"Mt. Eden Domain",contact:{},location:{lat:-36.876106,lng:174.76526,labeledLatLngs:[{label:"display",lat:-36.876106,lng:174.76526}],distance:526,cc:"NZ",neighborhood:"Ponsonby",country:"New Zealand",formattedAddress:["New Zealand"]},categories:[{id:"4bf58dd8d48988d163941735",name:"Park",pluralName:"Parks",shortName:"Park",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456049",venueChains:[],hasPerk:!1},{id:"4e30c846fa7638e661325749",name:"Big King Reserve",contact:{},location:{lat:-36.89510648910473,lng:174.74846356294717,labeledLatLngs:[{label:"display",lat:-36.89510648910473,lng:174.74846356294717}],distance:2112,cc:"NZ",country:"New Zealand",formattedAddress:["New Zealand"]},categories:[{id:"4bf58dd8d48988d1e5941735",name:"Dog Run",pluralName:"Dog Runs",shortName:"Dog Run",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/dogrun_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456049",venueChains:[],hasPerk:!1},{id:"4c3ff3a4af052d7f0a2d7b79",name:"Gribblehurst Park (Eden Rugby Club)",contact:{},location:{lat:-36.88055296198572,lng:174.73874126016824,labeledLatLngs:[{label:"display",lat:-36.88055296198572,lng:174.73874126016824}],distance:1929,cc:"NZ",country:"New Zealand",formattedAddress:["New Zealand"]},categories:[{id:"4bf58dd8d48988d163941735",name:"Park",pluralName:"Parks",shortName:"Park",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456049",venueChains:[],hasPerk:!1},{id:"4c65f74f9cb82d7f63968fd2",name:"Mangawhai heads",contact:{},location:{lat:-36.86594843313934,lng:174.75346554021155,labeledLatLngs:[{label:"display",lat:-36.86594843313934,lng:174.75346554021155}],distance:1538,cc:"NZ",city:"Mangawhai",state:"Northland",country:"New Zealand",formattedAddress:["Mangawhai","New Zealand"]},categories:[{id:"4bf58dd8d48988d1e2941735",name:"Beach",pluralName:"Beaches",shortName:"Beach",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/beach_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456292",venueChains:[],hasPerk:!1},{id:"4efe94fcb6346feaebb48486",name:"Orewa Surf Club",contact:{},location:{lat:-36.87882619858935,lng:174.7524660207742,labeledLatLngs:[{label:"display",lat:-36.87882619858935,lng:174.7524660207742}],distance:696,cc:"NZ",country:"New Zealand",formattedAddress:["New Zealand"]},categories:[{id:"4bf58dd8d48988d1e3941735",name:"Surf Spot",pluralName:"Surf Spots",shortName:"Surf Spot",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/surfspot_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456292",venueChains:[],hasPerk:!1},{id:"4b5204e0f964a520b06127e3",name:"Mount Eden - Maungawhau",contact:{},location:{address:"Mount Eden",lat:-36.87750940966855,lng:174.76439237594604,labeledLatLngs:[{label:"display",lat:-36.87750940966855,lng:174.76439237594604}],distance:387,postalCode:"1024",cc:"NZ",city:"Mt Eden",state:"Auckland",country:"New Zealand",formattedAddress:["Mount Eden","Mt Eden 1024","New Zealand"]},categories:[{id:"4eb1d4d54b900d56c88a45fc",name:"Mountain",pluralName:"Mountains",shortName:"Mountain",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/mountain_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456641",venueChains:[],hasPerk:!1},{id:"4f068cd19adf3def7216ea27",name:"Balconaje",contact:{},location:{address:"Remuera Rd",lat:-36.87403698743148,lng:174.78259690703499,labeledLatLngs:[{label:"display",lat:-36.87403698743148,lng:174.78259690703499}],distance:2052,cc:"NZ",country:"New Zealand",formattedAddress:["Remuera Rd","New Zealand"]},categories:[{id:"4bf58dd8d48988d165941735",name:"Scenic Lookout",pluralName:"Scenic Lookouts",shortName:"Scenic Lookout",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456641",venueChains:[],hasPerk:!1},{id:"4f28c606e4b03a37671e61dc",name:"Bassett Rd",contact:{},location:{address:"Bassett Rd",lat:-36.869772,lng:174.782626,labeledLatLngs:[{label:"display",lat:-36.869772,lng:174.782626}],distance:2221,cc:"NZ",country:"New Zealand",formattedAddress:["Bassett Rd","New Zealand"]},categories:[{id:"4bf58dd8d48988d165941735",name:"Scenic Lookout",pluralName:"Scenic Lookouts",shortName:"Scenic Lookout",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456641",venueChains:[],hasPerk:!1},{id:"4d9d1abb8efaa143fa4d5eb7",name:"Mt St John Summit",contact:{},location:{lat:-36.88340555366849,lng:174.78072120107328,labeledLatLngs:[{label:"display",lat:-36.88340555366849,lng:174.78072120107328}],distance:1895,postalCode:"1024",cc:"NZ",city:"Auckland",state:"Auckland",country:"New Zealand",formattedAddress:["Auckland 1024","New Zealand"]},categories:[{id:"4bf58dd8d48988d165941735",name:"Scenic Lookout",pluralName:"Scenic Lookouts",shortName:"Scenic Lookout",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456641",venueChains:[],hasPerk:!1},{id:"514c0b2de4b0ccf65fce98e6",name:"Gribblehirst Park",contact:{},location:{lat:-36.872467041531536,lng:174.75022723781422,labeledLatLngs:[{label:"display",lat:-36.872467041531536,lng:174.75022723781422}],distance:1129,cc:"NZ",country:"New Zealand",formattedAddress:["New Zealand"]},categories:[{id:"4bf58dd8d48988d163941735",name:"Park",pluralName:"Parks",shortName:"Park",icon:{prefix:"https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",suffix:".png"},primary:!0}],verified:!1,stats:{tipCount:0,usersCount:0,checkinsCount:0,visitsCount:0},beenHere:{count:0,lastCheckinExpiredAt:0,marked:!1,unconfirmedCount:0},referralId:"v-1555456694",venueChains:[],hasPerk:!1}],confident:!1}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
