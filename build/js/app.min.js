// Foursquare API Credentials - Tim
// const client_id = '&client_id=' + 'Q5PQQNTJS4UGM10I1RWODUVC4XS2PBULBDYZKFLAFECJ4ZIM';
// const client_secret = '&client_secret=' + '4TMTXMB4LL35O3GR1QXONNBAJ5OCGZUO5HLWAQQGSHHPZZV2';

// // Foursquare API Credentials - Nikita
// const client_id = '&client_id=' + '2F1JEBGBXWUCCK1VS5OZAFT2BELR15OCVOBRDEVCJFKQNDGM';
// const client_secret = '&client_secret=' + 'UIK2BOJFZ1OEZJRBIMW35SOGRB1LFETJVWICBAVBE4JJVCJP';

// // Foursquare API Credentials - Louella
// const client_id = '&client_id=' + 'JSBCLUKSAG3BD0D1BOIRNAEMKWTQY0P401LJCYETQQXBS3W0';
// const client_secret = '&client_secret=' + 'HSRPRSP1SQJWTG3NN2EOBPCASHO52SBOU4ZPFXOJPZYIL3DK';

// // Foursquare API Credentials - John Smith t1557976@nwytg.net yoobee12345
const client_id = '&client_id=' + 'NTVGVUVVSZ5YDPGPAQF5STMX4NC25NYT1S3X1O5MEOG3GGYG';
const client_secret = '&client_secret=' + 'BEWE5CHPVGE31A1WIDLOZBEDO1K2MFP5I4KCU1EMW3EMG02T';
// - by Tim
// Step 1 - Is the event listener which identifies event.target. See main.js - by Tim
// Step 2 - Link the html element to the foursquare category ID - by Tim
function identifyCategory(e) {
  // declare variables
  let chosenRadius = '0';
  let chosenCategory = '0';
  // simple conditional to match the DOM element to the api ID
  if (e.id == 'jsCatTrending') {
    // chosenRadius = '6000';
    extractNeededData(trending.response.venues);

  } else if (e.id == 'jsCatParks') {
    chosenRadius = '2000';
    chosenCategory = '4bf58dd8d48988d163941735';
    createSearchRequestURI(chosenRadius, chosenCategory);

  } else if (e.id == 'jsCatBeaches') {
    chosenRadius = '2000';
    chosenCategory = '4bf58dd8d48988d1e2941735';
    createSearchRequestURI(chosenRadius, chosenCategory);

  } else if (e.id == 'jsCatLookouts') {
    chosenRadius = '2000';
    chosenCategory = '4bf58dd8d48988d165941735';
    createSearchRequestURI(chosenRadius, chosenCategory);
  }
  else if (e.id == 'jsCatTrending') {
    extractNeededData(trending.response.venues);
  }
}


// Step 3 - Create the search query request uri - by Tim
function createSearchRequestURI(rad, cat) {
  const baseURI = 'https://api.foursquare.com/v2/venues/search?v=20170901';

  const latlong = '&ll=' + currentUserLocStr;
  // This value will be a variable
  const radius = '&radius=' + rad;
  // This value will be a variable
  const categoryId = '&categoryId=' + cat;
  // Put all the pieces together
  // client_id and client_secret are variables located in auth.js
  const requestURI = baseURI + client_id + client_secret + latlong + radius + categoryId;
  // run next function
  makeSearchRequest(requestURI);
}


// Step 4 - Make the actual request - by Tim
function makeSearchRequest(uri) {
  fetch(uri)
    .then(function(response) {
      return response.json();
    })
    .then(function(myJson) {
      extractNeededData(myJson.response.venues);
      console.log(myJson.response);
    })
    .catch(function(error) {
      console.log(error);
    });
}


// Step 5 - Extract the data we are using from the json response - by Tim
function extractNeededData(data) {
    // declare empty array
    const venuesForMap = [];
    // Loop through json response
    data.forEach(venue => {
      // Push the name, ID, and latlng into an array to use for the map
      venuesForMap.push({
        name: venue.name,
        id: venue.id,
        latlng: 
          [
            venue.location.lat,
            venue.location.lng
          ]
      });
    });
    // Create the map with the data gathered. Function located in main.js
    createMap(venuesForMap);
}
// Identifiers - by Tim
// Every ID prefixed with 'js' is a DOM element
const jsCatDropdown = document.getElementById('jsCatDropdown');
const jsCatTrending = document.getElementById('jsCatTrending');
const jsCatParks = document.getElementById('jsCatParks');
const jsCatBeaches = document.getElementById('jsCatBeaches');
const jsCatLookouts = document.getElementById('jsCatLookouts');

// Modal identifiers
var modalContentContainer = document.getElementById('modalContentContainer');
// These need to be global variables in order to access them from different functions
let currentUserLoc = [-36.8977931, 174.7854973];
let currentUserLocStr = '';
let mymap;
let miniMap;
let zoom = 0;


// Wait for dom to be fully loaded, then add event listeners and initialise map - Tim
document.addEventListener("DOMContentLoaded", () => {
  console.log("DOM ready!");
  // identify the event target
  jsCatDropdown.addEventListener('click', (e) => {
    identifyCategory(e.target);
  });
  // Load the empty map on page load
  createInitialMap();

});


// Detect screen width and change zoom accordingly - by Nikita
function detectScreenWidth() {
  if ($(window).width() < 768) {
    let zoom = 10;
    console.log('screen size is less than 768px');
    return zoom;
  } else {
    let zoom = 11;
    console.log('screen size is less than 768px');
    return zoom;
  };
}


// This is the map that gets loaded om page load
function createInitialMap() {
  // detect screen size
  let z = detectScreenWidth();
  // Map work by Nikita
  let center = [-36.8977931, 174.7854973];
  mymap = L.map('mapid').setView(center, z);
  // create actual map
  createMapPart(center);
  // run the function to detect users location
  mymap.locate({setView: true, maxZoom: 16});
  // plot marker on the map for users location
  mymap.on('locationfound', onLocationFound);
}


// This is the map that gets loaded after user has selected a category
function createMap(v) {
  // detect screen size
  let z = detectScreenWidth();
  // remove previously loaded map first
  if (mymap) {
    mymap.remove();
  }
  // Map work by Nikita
  let center = currentUserLoc;
  mymap = L.map('mapid').setView(center, z);
  // create actual map
  createMapPart(center);
  // run the function to detect users location
  mymap.locate({setView: true, maxZoom: z});
  // plot marker on the map for users location
  mymap.on('locationfound', onLocationFound);
  // nikita - putting markers on the map
  v.forEach(function (venue) {
    try {
      var serviceIcon = L.icon({
        iconUrl: '../build/img/pin.svg',
        iconSize: [72, 72],
        popupAnchor: [0, -36]
      });
      var marker = L.marker(venue.latlng, { icon: serviceIcon }).addTo(mymap);
      marker.bindPopup('<div>' + venue.name + '</div>' + '<button type="button" id="' + venue.id + '" class="btn btn-primary" data-toggle="modal" data-target="#modalCenter">' + 'Explore' + '</button>')

      //louella - target pop up button to populate details
      const version = '?v=20170901';
      const key = version + client_id + client_secret;
      const venueId = venue.id;
      const baseURL = 'https://api.foursquare.com/v2/venues/';
      let venueUrl = baseURL + venueId + key;

      marker.on('popupopen', () => {
        // pop up button
        const jsPopUpButton = document.getElementById(venueId);
        // click function
        jsPopUpButton.addEventListener('click', (e) => {
          console.log(e.target);
          //Add venue details through API call
          fetchVenue(venueUrl);
        });
      })

    } catch (error) {
      console.log(error);
    }
  });
}


// This is the logic that creates the map. Since we have two similar functions I put this part in a separate function to keep it DRY - Tim
function createMapPart(center) {
  // Tiles
  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoidGhhbHl4OTAiLCJhIjoiY2o2YjdrZHRlMWJmYjJybDd2cW1rYnVnNSJ9.j_DQLfixHfhioVjH6qmqkw', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1IjoibmlraXRhaG9pbmVzIiwiYSI6ImNqc203cHN5NDEwaGg0OXBpYnE0aXhhZmYifQ.58l8dUZg4uiFn7BYnZCJFA'
  }).addTo(mymap);
  // Radius
  L.circle(center, {
      radius: 21500,
      color: 'salmon',
      weight: 1,
      fill: true
    }).addTo(mymap);
}


// this function detects users location - by Tim
function onLocationFound(e) {
  var radius = e.accuracy / 2;
  // add marker to map
  L.marker(e.latlng).addTo(mymap)
    // open popup with a message
    .bindPopup("You are within " + radius + " meters from this point").openPopup();
  // add circle around marker
  L.circle(e.latlng, radius).addTo(mymap);
  // set global variables
  currentUserLoc = [e.latlng.lat, e.latlng.lng]
  currentUserLocStr = currentUserLoc.toString();
}
// Step 4 - Make the actual request
function fetchVenue(uri) {
  fetch(uri)
    .then(function (response) {
      // a. return response in json format
      return response.json();
    })
    .then(function (myJson) {
      // b. extract data from response and run this function
      venueDetails(myJson.response);
    })
    .catch(function (error) {
      // Code for handling errors
      console.log(error);
    });
}

function venueDetails(res) {
  window.fake = res;
  // Modal title
  const title = res.venue.name;
  // Venue description
  if (res.venue.description !== undefined) {
    var description = res.venue.description;
  } else {
    var description = 'This venue does not have a description';
  }
  //Construct modal image/
  if (res.venue.bestPhoto !== undefined) {
    var photoPrefix = res.venue.bestPhoto.prefix;
    var photoSuffix = res.venue.bestPhoto.suffix;
    var venueImage = photoPrefix + '720x720' + photoSuffix;
  } else {
    var venueImage = 'src/img/dog-3.jpg';
  }
  // Add website
  if (res.venue.shortUrl !== undefined) {
    var website = res.venue.shortUrl;
  }
  // Add address
  if (res.venue.location.address !== undefined && res.venue.location.city !== undefined) {
    var address = res.venue.location.address + ', ' + res.venue.location.city;
  } else {
    var address = 'This venue does not have an address';
  }
  // Adding Mini Map
  if(miniMap) {
    miniMap.remove();
  }
  // Insert Mini map with user location https://leafletjs.com/reference-1.0.0.html
  let venueLocation = [res.venue.location.lat, res.venue.location.lng];
  miniMap = L.map('jsMiniMap', {
    scrollWheelZoom: false
  }).setView(venueLocation, 17);
  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox.streets',
    accessToken: 'pk.eyJ1IjoibmlraXRhaG9pbmVzIiwiYSI6ImNqc203cHN5NDEwaGg0OXBpYnE0aXhhZmYifQ.58l8dUZg4uiFn7BYnZCJFA'
  }).addTo(miniMap);
  // Directions
  const directions = 'http://www.google.com/maps/place/' + res.venue.location.lat + ',' + res.venue.location.lng;
  // Inject template with modal content
  createModalContent(title, venueImage, description, address, website, directions); 
}

// Create Modal content
function createModalContent(title, venueImage, description, address, website, directions) {
  // empty modal if it has contents

  while(modalContentContainer.firstElementChild) {
    modalContentContainer.removeChild(modalContentContainer.firstChild);
  }

  // modal content template
  modalContentContainer.innerHTML = `
  <div class="modal-header">
    <h5 class="modal-title" id="jsModalLongTitle">${title}</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
  <div class="modal-body">
    <div class="venue-item">
      <img class="d-block w-100" id="jsVenueImg" src="${venueImage}" alt="modal-example">
    </div>
    <p id="jsVenueDescription">${description}</p>
    <p class="jsVenueAddress">${address}</p>
    <a class="pr-5" id="jsVenueWebsite" href="${website}" target="_blank">website link</a>
    <a href="${directions}" class="btn btn-primary" id="jsDirections" target="_blank">Get Directions</a>
  </div>
  `;

  // Now toggle the Modal
  $('#modalCenter').modal('show');
}

const trending = {
  "meta": {
      "code": 200,
      "requestId": "5cb660314434b94d1eaee476"
  },
  "response": {
      "venues": [
          {
              "id": "5bf629fe81635b002c9d71c0",
              "name": "Bridgeman Reserve",
              "contact": {},
              "location": {
                  "lat": -36.877975,
                  "lng": 174.76097,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.877975,
                          "lng": 174.76097
                      }
                  ],
                  "distance": 97,
                  "postalCode": "1024",
                  "cc": "NZ",
                  "city": "Auckland",
                  "state": "Auckland",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "Auckland 1024",
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d163941735",
                      "name": "Park",
                      "pluralName": "Parks",
                      "shortName": "Park",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456049",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "55523c45498e585e9e197039",
              "name": "Mt. Eden Domain",
              "contact": {},
              "location": {
                  "lat": -36.876106,
                  "lng": 174.76526,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.876106,
                          "lng": 174.76526
                      }
                  ],
                  "distance": 526,
                  "cc": "NZ",
                  "neighborhood": "Ponsonby",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d163941735",
                      "name": "Park",
                      "pluralName": "Parks",
                      "shortName": "Park",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456049",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4e30c846fa7638e661325749",
              "name": "Big King Reserve",
              "contact": {},
              "location": {
                  "lat": -36.89510648910473,
                  "lng": 174.74846356294717,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.89510648910473,
                          "lng": 174.74846356294717
                      }
                  ],
                  "distance": 2112,
                  "cc": "NZ",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d1e5941735",
                      "name": "Dog Run",
                      "pluralName": "Dog Runs",
                      "shortName": "Dog Run",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/dogrun_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456049",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4c3ff3a4af052d7f0a2d7b79",
              "name": "Gribblehurst Park (Eden Rugby Club)",
              "contact": {},
              "location": {
                  "lat": -36.88055296198572,
                  "lng": 174.73874126016824,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.88055296198572,
                          "lng": 174.73874126016824
                      }
                  ],
                  "distance": 1929,
                  "cc": "NZ",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d163941735",
                      "name": "Park",
                      "pluralName": "Parks",
                      "shortName": "Park",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456049",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4c65f74f9cb82d7f63968fd2",
              "name": "Mangawhai heads",
              "contact": {},
              "location": {
                  "lat": -36.86594843313934,
                  "lng": 174.75346554021155,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.86594843313934,
                          "lng": 174.75346554021155
                      }
                  ],
                  "distance": 1538,
                  "cc": "NZ",
                  "city": "Mangawhai",
                  "state": "Northland",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "Mangawhai",
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d1e2941735",
                      "name": "Beach",
                      "pluralName": "Beaches",
                      "shortName": "Beach",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/beach_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456292",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4efe94fcb6346feaebb48486",
              "name": "Orewa Surf Club",
              "contact": {},
              "location": {
                  "lat": -36.87882619858935,
                  "lng": 174.7524660207742,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.87882619858935,
                          "lng": 174.7524660207742
                      }
                  ],
                  "distance": 696,
                  "cc": "NZ",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d1e3941735",
                      "name": "Surf Spot",
                      "pluralName": "Surf Spots",
                      "shortName": "Surf Spot",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/surfspot_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456292",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4b5204e0f964a520b06127e3",
              "name": "Mount Eden - Maungawhau",
              "contact": {},
              "location": {
                  "address": "Mount Eden",
                  "lat": -36.87750940966855,
                  "lng": 174.76439237594604,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.87750940966855,
                          "lng": 174.76439237594604
                      }
                  ],
                  "distance": 387,
                  "postalCode": "1024",
                  "cc": "NZ",
                  "city": "Mt Eden",
                  "state": "Auckland",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "Mount Eden",
                      "Mt Eden 1024",
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4eb1d4d54b900d56c88a45fc",
                      "name": "Mountain",
                      "pluralName": "Mountains",
                      "shortName": "Mountain",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/mountain_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456641",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4f068cd19adf3def7216ea27",
              "name": "Balconaje",
              "contact": {},
              "location": {
                  "address": "Remuera Rd",
                  "lat": -36.87403698743148,
                  "lng": 174.78259690703499,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.87403698743148,
                          "lng": 174.78259690703499
                      }
                  ],
                  "distance": 2052,
                  "cc": "NZ",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "Remuera Rd",
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d165941735",
                      "name": "Scenic Lookout",
                      "pluralName": "Scenic Lookouts",
                      "shortName": "Scenic Lookout",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456641",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4f28c606e4b03a37671e61dc",
              "name": "Bassett Rd",
              "contact": {},
              "location": {
                  "address": "Bassett Rd",
                  "lat": -36.869772,
                  "lng": 174.782626,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.869772,
                          "lng": 174.782626
                      }
                  ],
                  "distance": 2221,
                  "cc": "NZ",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "Bassett Rd",
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d165941735",
                      "name": "Scenic Lookout",
                      "pluralName": "Scenic Lookouts",
                      "shortName": "Scenic Lookout",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456641",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "4d9d1abb8efaa143fa4d5eb7",
              "name": "Mt St John Summit",
              "contact": {},
              "location": {
                  "lat": -36.88340555366849,
                  "lng": 174.78072120107328,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.88340555366849,
                          "lng": 174.78072120107328
                      }
                  ],
                  "distance": 1895,
                  "postalCode": "1024",
                  "cc": "NZ",
                  "city": "Auckland",
                  "state": "Auckland",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "Auckland 1024",
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d165941735",
                      "name": "Scenic Lookout",
                      "pluralName": "Scenic Lookouts",
                      "shortName": "Scenic Lookout",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/sceniclookout_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456641",
              "venueChains": [],
              "hasPerk": false
          },
          {
              "id": "514c0b2de4b0ccf65fce98e6",
              "name": "Gribblehirst Park",
              "contact": {},
              "location": {
                  "lat": -36.872467041531536,
                  "lng": 174.75022723781422,
                  "labeledLatLngs": [
                      {
                          "label": "display",
                          "lat": -36.872467041531536,
                          "lng": 174.75022723781422
                      }
                  ],
                  "distance": 1129,
                  "cc": "NZ",
                  "country": "New Zealand",
                  "formattedAddress": [
                      "New Zealand"
                  ]
              },
              "categories": [
                  {
                      "id": "4bf58dd8d48988d163941735",
                      "name": "Park",
                      "pluralName": "Parks",
                      "shortName": "Park",
                      "icon": {
                          "prefix": "https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_",
                          "suffix": ".png"
                      },
                      "primary": true
                  }
              ],
              "verified": false,
              "stats": {
                  "tipCount": 0,
                  "usersCount": 0,
                  "checkinsCount": 0,
                  "visitsCount": 0
              },
              "beenHere": {
                  "count": 0,
                  "lastCheckinExpiredAt": 0,
                  "marked": false,
                  "unconfirmedCount": 0
              },
              "referralId": "v-1555456694",
              "venueChains": [],
              "hasPerk": false
          }
          
      ],
      "confident": false
  }
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJhcHAubWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZvdXJzcXVhcmUgQVBJIENyZWRlbnRpYWxzIC0gVGltXG4vLyBjb25zdCBjbGllbnRfaWQgPSAnJmNsaWVudF9pZD0nICsgJ1E1UFFRTlRKUzRVR00xMEkxUldPRFVWQzRYUzJQQlVMQkRZWktGTEFGRUNKNFpJTSc7XG4vLyBjb25zdCBjbGllbnRfc2VjcmV0ID0gJyZjbGllbnRfc2VjcmV0PScgKyAnNFRNVFhNQjRMTDM1TzNHUjFRWE9OTkJBSjVPQ0daVU81SExXQVFRR1NISFBaWlYyJztcblxuLy8gLy8gRm91cnNxdWFyZSBBUEkgQ3JlZGVudGlhbHMgLSBOaWtpdGFcbi8vIGNvbnN0IGNsaWVudF9pZCA9ICcmY2xpZW50X2lkPScgKyAnMkYxSkVCR0JYV1VDQ0sxVlM1T1pBRlQyQkVMUjE1T0NWT0JSREVWQ0pGS1FOREdNJztcbi8vIGNvbnN0IGNsaWVudF9zZWNyZXQgPSAnJmNsaWVudF9zZWNyZXQ9JyArICdVSUsyQk9KRloxT0VaSlJCSU1XMzVTT0dSQjFMRkVUSlZXSUNCQVZCRTRKSlZDSlAnO1xuXG4vLyAvLyBGb3Vyc3F1YXJlIEFQSSBDcmVkZW50aWFscyAtIExvdWVsbGFcbi8vIGNvbnN0IGNsaWVudF9pZCA9ICcmY2xpZW50X2lkPScgKyAnSlNCQ0xVS1NBRzNCRDBEMUJPSVJOQUVNS1dUUVkwUDQwMUxKQ1lFVFFRWEJTM1cwJztcbi8vIGNvbnN0IGNsaWVudF9zZWNyZXQgPSAnJmNsaWVudF9zZWNyZXQ9JyArICdIU1JQUlNQMVNRSldURzNOTjJFT0JQQ0FTSE81MlNCT1U0WlBGWE9KUFpZSUwzREsnO1xuXG4vLyAvLyBGb3Vyc3F1YXJlIEFQSSBDcmVkZW50aWFscyAtIEpvaG4gU21pdGggdDE1NTc5NzZAbnd5dGcubmV0IHlvb2JlZTEyMzQ1XG5jb25zdCBjbGllbnRfaWQgPSAnJmNsaWVudF9pZD0nICsgJ05UVkdWVVZWU1o1WURQR1BBUUY1U1RNWDROQzI1TllUMVMzWDFPNU1FT0czR0dZRyc7XG5jb25zdCBjbGllbnRfc2VjcmV0ID0gJyZjbGllbnRfc2VjcmV0PScgKyAnQkVXRTVDSFBWR0UzMUExV0lETE9aQkVETzFLMk1GUDVJNEtDVTFFTVczRU1HMDJUJztcbi8vIC0gYnkgVGltXG4vLyBTdGVwIDEgLSBJcyB0aGUgZXZlbnQgbGlzdGVuZXIgd2hpY2ggaWRlbnRpZmllcyBldmVudC50YXJnZXQuIFNlZSBtYWluLmpzIC0gYnkgVGltXG4vLyBTdGVwIDIgLSBMaW5rIHRoZSBodG1sIGVsZW1lbnQgdG8gdGhlIGZvdXJzcXVhcmUgY2F0ZWdvcnkgSUQgLSBieSBUaW1cbmZ1bmN0aW9uIGlkZW50aWZ5Q2F0ZWdvcnkoZSkge1xuICAvLyBkZWNsYXJlIHZhcmlhYmxlc1xuICBsZXQgY2hvc2VuUmFkaXVzID0gJzAnO1xuICBsZXQgY2hvc2VuQ2F0ZWdvcnkgPSAnMCc7XG4gIC8vIHNpbXBsZSBjb25kaXRpb25hbCB0byBtYXRjaCB0aGUgRE9NIGVsZW1lbnQgdG8gdGhlIGFwaSBJRFxuICBpZiAoZS5pZCA9PSAnanNDYXRUcmVuZGluZycpIHtcbiAgICAvLyBjaG9zZW5SYWRpdXMgPSAnNjAwMCc7XG4gICAgZXh0cmFjdE5lZWRlZERhdGEodHJlbmRpbmcucmVzcG9uc2UudmVudWVzKTtcblxuICB9IGVsc2UgaWYgKGUuaWQgPT0gJ2pzQ2F0UGFya3MnKSB7XG4gICAgY2hvc2VuUmFkaXVzID0gJzIwMDAnO1xuICAgIGNob3NlbkNhdGVnb3J5ID0gJzRiZjU4ZGQ4ZDQ4OTg4ZDE2Mzk0MTczNSc7XG4gICAgY3JlYXRlU2VhcmNoUmVxdWVzdFVSSShjaG9zZW5SYWRpdXMsIGNob3NlbkNhdGVnb3J5KTtcblxuICB9IGVsc2UgaWYgKGUuaWQgPT0gJ2pzQ2F0QmVhY2hlcycpIHtcbiAgICBjaG9zZW5SYWRpdXMgPSAnMjAwMCc7XG4gICAgY2hvc2VuQ2F0ZWdvcnkgPSAnNGJmNThkZDhkNDg5ODhkMWUyOTQxNzM1JztcbiAgICBjcmVhdGVTZWFyY2hSZXF1ZXN0VVJJKGNob3NlblJhZGl1cywgY2hvc2VuQ2F0ZWdvcnkpO1xuXG4gIH0gZWxzZSBpZiAoZS5pZCA9PSAnanNDYXRMb29rb3V0cycpIHtcbiAgICBjaG9zZW5SYWRpdXMgPSAnMjAwMCc7XG4gICAgY2hvc2VuQ2F0ZWdvcnkgPSAnNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1JztcbiAgICBjcmVhdGVTZWFyY2hSZXF1ZXN0VVJJKGNob3NlblJhZGl1cywgY2hvc2VuQ2F0ZWdvcnkpO1xuICB9XG4gIGVsc2UgaWYgKGUuaWQgPT0gJ2pzQ2F0VHJlbmRpbmcnKSB7XG4gICAgZXh0cmFjdE5lZWRlZERhdGEodHJlbmRpbmcucmVzcG9uc2UudmVudWVzKTtcbiAgfVxufVxuXG5cbi8vIFN0ZXAgMyAtIENyZWF0ZSB0aGUgc2VhcmNoIHF1ZXJ5IHJlcXVlc3QgdXJpIC0gYnkgVGltXG5mdW5jdGlvbiBjcmVhdGVTZWFyY2hSZXF1ZXN0VVJJKHJhZCwgY2F0KSB7XG4gIGNvbnN0IGJhc2VVUkkgPSAnaHR0cHM6Ly9hcGkuZm91cnNxdWFyZS5jb20vdjIvdmVudWVzL3NlYXJjaD92PTIwMTcwOTAxJztcblxuICBjb25zdCBsYXRsb25nID0gJyZsbD0nICsgY3VycmVudFVzZXJMb2NTdHI7XG4gIC8vIFRoaXMgdmFsdWUgd2lsbCBiZSBhIHZhcmlhYmxlXG4gIGNvbnN0IHJhZGl1cyA9ICcmcmFkaXVzPScgKyByYWQ7XG4gIC8vIFRoaXMgdmFsdWUgd2lsbCBiZSBhIHZhcmlhYmxlXG4gIGNvbnN0IGNhdGVnb3J5SWQgPSAnJmNhdGVnb3J5SWQ9JyArIGNhdDtcbiAgLy8gUHV0IGFsbCB0aGUgcGllY2VzIHRvZ2V0aGVyXG4gIC8vIGNsaWVudF9pZCBhbmQgY2xpZW50X3NlY3JldCBhcmUgdmFyaWFibGVzIGxvY2F0ZWQgaW4gYXV0aC5qc1xuICBjb25zdCByZXF1ZXN0VVJJID0gYmFzZVVSSSArIGNsaWVudF9pZCArIGNsaWVudF9zZWNyZXQgKyBsYXRsb25nICsgcmFkaXVzICsgY2F0ZWdvcnlJZDtcbiAgLy8gcnVuIG5leHQgZnVuY3Rpb25cbiAgbWFrZVNlYXJjaFJlcXVlc3QocmVxdWVzdFVSSSk7XG59XG5cblxuLy8gU3RlcCA0IC0gTWFrZSB0aGUgYWN0dWFsIHJlcXVlc3QgLSBieSBUaW1cbmZ1bmN0aW9uIG1ha2VTZWFyY2hSZXF1ZXN0KHVyaSkge1xuICBmZXRjaCh1cmkpXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSlcbiAgICAudGhlbihmdW5jdGlvbihteUpzb24pIHtcbiAgICAgIGV4dHJhY3ROZWVkZWREYXRhKG15SnNvbi5yZXNwb25zZS52ZW51ZXMpO1xuICAgICAgY29uc29sZS5sb2cobXlKc29uLnJlc3BvbnNlKTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xufVxuXG5cbi8vIFN0ZXAgNSAtIEV4dHJhY3QgdGhlIGRhdGEgd2UgYXJlIHVzaW5nIGZyb20gdGhlIGpzb24gcmVzcG9uc2UgLSBieSBUaW1cbmZ1bmN0aW9uIGV4dHJhY3ROZWVkZWREYXRhKGRhdGEpIHtcbiAgICAvLyBkZWNsYXJlIGVtcHR5IGFycmF5XG4gICAgY29uc3QgdmVudWVzRm9yTWFwID0gW107XG4gICAgLy8gTG9vcCB0aHJvdWdoIGpzb24gcmVzcG9uc2VcbiAgICBkYXRhLmZvckVhY2godmVudWUgPT4ge1xuICAgICAgLy8gUHVzaCB0aGUgbmFtZSwgSUQsIGFuZCBsYXRsbmcgaW50byBhbiBhcnJheSB0byB1c2UgZm9yIHRoZSBtYXBcbiAgICAgIHZlbnVlc0Zvck1hcC5wdXNoKHtcbiAgICAgICAgbmFtZTogdmVudWUubmFtZSxcbiAgICAgICAgaWQ6IHZlbnVlLmlkLFxuICAgICAgICBsYXRsbmc6IFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIHZlbnVlLmxvY2F0aW9uLmxhdCxcbiAgICAgICAgICAgIHZlbnVlLmxvY2F0aW9uLmxuZ1xuICAgICAgICAgIF1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIC8vIENyZWF0ZSB0aGUgbWFwIHdpdGggdGhlIGRhdGEgZ2F0aGVyZWQuIEZ1bmN0aW9uIGxvY2F0ZWQgaW4gbWFpbi5qc1xuICAgIGNyZWF0ZU1hcCh2ZW51ZXNGb3JNYXApO1xufVxuLy8gSWRlbnRpZmllcnMgLSBieSBUaW1cbi8vIEV2ZXJ5IElEIHByZWZpeGVkIHdpdGggJ2pzJyBpcyBhIERPTSBlbGVtZW50XG5jb25zdCBqc0NhdERyb3Bkb3duID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzQ2F0RHJvcGRvd24nKTtcbmNvbnN0IGpzQ2F0VHJlbmRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanNDYXRUcmVuZGluZycpO1xuY29uc3QganNDYXRQYXJrcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdqc0NhdFBhcmtzJyk7XG5jb25zdCBqc0NhdEJlYWNoZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnanNDYXRCZWFjaGVzJyk7XG5jb25zdCBqc0NhdExvb2tvdXRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2pzQ2F0TG9va291dHMnKTtcblxuLy8gTW9kYWwgaWRlbnRpZmllcnNcbnZhciBtb2RhbENvbnRlbnRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWxDb250ZW50Q29udGFpbmVyJyk7XG4vLyBUaGVzZSBuZWVkIHRvIGJlIGdsb2JhbCB2YXJpYWJsZXMgaW4gb3JkZXIgdG8gYWNjZXNzIHRoZW0gZnJvbSBkaWZmZXJlbnQgZnVuY3Rpb25zXG5sZXQgY3VycmVudFVzZXJMb2MgPSBbLTM2Ljg5Nzc5MzEsIDE3NC43ODU0OTczXTtcbmxldCBjdXJyZW50VXNlckxvY1N0ciA9ICcnO1xubGV0IG15bWFwO1xubGV0IG1pbmlNYXA7XG5sZXQgem9vbSA9IDA7XG5cblxuLy8gV2FpdCBmb3IgZG9tIHRvIGJlIGZ1bGx5IGxvYWRlZCwgdGhlbiBhZGQgZXZlbnQgbGlzdGVuZXJzIGFuZCBpbml0aWFsaXNlIG1hcCAtIFRpbVxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIkRPTSByZWFkeSFcIik7XG4gIC8vIGlkZW50aWZ5IHRoZSBldmVudCB0YXJnZXRcbiAganNDYXREcm9wZG93bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgaWRlbnRpZnlDYXRlZ29yeShlLnRhcmdldCk7XG4gIH0pO1xuICAvLyBMb2FkIHRoZSBlbXB0eSBtYXAgb24gcGFnZSBsb2FkXG4gIGNyZWF0ZUluaXRpYWxNYXAoKTtcblxufSk7XG5cblxuLy8gRGV0ZWN0IHNjcmVlbiB3aWR0aCBhbmQgY2hhbmdlIHpvb20gYWNjb3JkaW5nbHkgLSBieSBOaWtpdGFcbmZ1bmN0aW9uIGRldGVjdFNjcmVlbldpZHRoKCkge1xuICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCA3NjgpIHtcbiAgICBsZXQgem9vbSA9IDEwO1xuICAgIGNvbnNvbGUubG9nKCdzY3JlZW4gc2l6ZSBpcyBsZXNzIHRoYW4gNzY4cHgnKTtcbiAgICByZXR1cm4gem9vbTtcbiAgfSBlbHNlIHtcbiAgICBsZXQgem9vbSA9IDExO1xuICAgIGNvbnNvbGUubG9nKCdzY3JlZW4gc2l6ZSBpcyBsZXNzIHRoYW4gNzY4cHgnKTtcbiAgICByZXR1cm4gem9vbTtcbiAgfTtcbn1cblxuXG4vLyBUaGlzIGlzIHRoZSBtYXAgdGhhdCBnZXRzIGxvYWRlZCBvbSBwYWdlIGxvYWRcbmZ1bmN0aW9uIGNyZWF0ZUluaXRpYWxNYXAoKSB7XG4gIC8vIGRldGVjdCBzY3JlZW4gc2l6ZVxuICBsZXQgeiA9IGRldGVjdFNjcmVlbldpZHRoKCk7XG4gIC8vIE1hcCB3b3JrIGJ5IE5pa2l0YVxuICBsZXQgY2VudGVyID0gWy0zNi44OTc3OTMxLCAxNzQuNzg1NDk3M107XG4gIG15bWFwID0gTC5tYXAoJ21hcGlkJykuc2V0VmlldyhjZW50ZXIsIHopO1xuICAvLyBjcmVhdGUgYWN0dWFsIG1hcFxuICBjcmVhdGVNYXBQYXJ0KGNlbnRlcik7XG4gIC8vIHJ1biB0aGUgZnVuY3Rpb24gdG8gZGV0ZWN0IHVzZXJzIGxvY2F0aW9uXG4gIG15bWFwLmxvY2F0ZSh7c2V0VmlldzogdHJ1ZSwgbWF4Wm9vbTogMTZ9KTtcbiAgLy8gcGxvdCBtYXJrZXIgb24gdGhlIG1hcCBmb3IgdXNlcnMgbG9jYXRpb25cbiAgbXltYXAub24oJ2xvY2F0aW9uZm91bmQnLCBvbkxvY2F0aW9uRm91bmQpO1xufVxuXG5cbi8vIFRoaXMgaXMgdGhlIG1hcCB0aGF0IGdldHMgbG9hZGVkIGFmdGVyIHVzZXIgaGFzIHNlbGVjdGVkIGEgY2F0ZWdvcnlcbmZ1bmN0aW9uIGNyZWF0ZU1hcCh2KSB7XG4gIC8vIGRldGVjdCBzY3JlZW4gc2l6ZVxuICBsZXQgeiA9IGRldGVjdFNjcmVlbldpZHRoKCk7XG4gIC8vIHJlbW92ZSBwcmV2aW91c2x5IGxvYWRlZCBtYXAgZmlyc3RcbiAgaWYgKG15bWFwKSB7XG4gICAgbXltYXAucmVtb3ZlKCk7XG4gIH1cbiAgLy8gTWFwIHdvcmsgYnkgTmlraXRhXG4gIGxldCBjZW50ZXIgPSBjdXJyZW50VXNlckxvYztcbiAgbXltYXAgPSBMLm1hcCgnbWFwaWQnKS5zZXRWaWV3KGNlbnRlciwgeik7XG4gIC8vIGNyZWF0ZSBhY3R1YWwgbWFwXG4gIGNyZWF0ZU1hcFBhcnQoY2VudGVyKTtcbiAgLy8gcnVuIHRoZSBmdW5jdGlvbiB0byBkZXRlY3QgdXNlcnMgbG9jYXRpb25cbiAgbXltYXAubG9jYXRlKHtzZXRWaWV3OiB0cnVlLCBtYXhab29tOiB6fSk7XG4gIC8vIHBsb3QgbWFya2VyIG9uIHRoZSBtYXAgZm9yIHVzZXJzIGxvY2F0aW9uXG4gIG15bWFwLm9uKCdsb2NhdGlvbmZvdW5kJywgb25Mb2NhdGlvbkZvdW5kKTtcbiAgLy8gbmlraXRhIC0gcHV0dGluZyBtYXJrZXJzIG9uIHRoZSBtYXBcbiAgdi5mb3JFYWNoKGZ1bmN0aW9uICh2ZW51ZSkge1xuICAgIHRyeSB7XG4gICAgICB2YXIgc2VydmljZUljb24gPSBMLmljb24oe1xuICAgICAgICBpY29uVXJsOiAnLi4vYnVpbGQvaW1nL3Bpbi5zdmcnLFxuICAgICAgICBpY29uU2l6ZTogWzcyLCA3Ml0sXG4gICAgICAgIHBvcHVwQW5jaG9yOiBbMCwgLTM2XVxuICAgICAgfSk7XG4gICAgICB2YXIgbWFya2VyID0gTC5tYXJrZXIodmVudWUubGF0bG5nLCB7IGljb246IHNlcnZpY2VJY29uIH0pLmFkZFRvKG15bWFwKTtcbiAgICAgIG1hcmtlci5iaW5kUG9wdXAoJzxkaXY+JyArIHZlbnVlLm5hbWUgKyAnPC9kaXY+JyArICc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBpZD1cIicgKyB2ZW51ZS5pZCArICdcIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGRhdGEtdG9nZ2xlPVwibW9kYWxcIiBkYXRhLXRhcmdldD1cIiNtb2RhbENlbnRlclwiPicgKyAnRXhwbG9yZScgKyAnPC9idXR0b24+JylcblxuICAgICAgLy9sb3VlbGxhIC0gdGFyZ2V0IHBvcCB1cCBidXR0b24gdG8gcG9wdWxhdGUgZGV0YWlsc1xuICAgICAgY29uc3QgdmVyc2lvbiA9ICc/dj0yMDE3MDkwMSc7XG4gICAgICBjb25zdCBrZXkgPSB2ZXJzaW9uICsgY2xpZW50X2lkICsgY2xpZW50X3NlY3JldDtcbiAgICAgIGNvbnN0IHZlbnVlSWQgPSB2ZW51ZS5pZDtcbiAgICAgIGNvbnN0IGJhc2VVUkwgPSAnaHR0cHM6Ly9hcGkuZm91cnNxdWFyZS5jb20vdjIvdmVudWVzLyc7XG4gICAgICBsZXQgdmVudWVVcmwgPSBiYXNlVVJMICsgdmVudWVJZCArIGtleTtcblxuICAgICAgbWFya2VyLm9uKCdwb3B1cG9wZW4nLCAoKSA9PiB7XG4gICAgICAgIC8vIHBvcCB1cCBidXR0b25cbiAgICAgICAgY29uc3QganNQb3BVcEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHZlbnVlSWQpO1xuICAgICAgICAvLyBjbGljayBmdW5jdGlvblxuICAgICAgICBqc1BvcFVwQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlLnRhcmdldCk7XG4gICAgICAgICAgLy9BZGQgdmVudWUgZGV0YWlscyB0aHJvdWdoIEFQSSBjYWxsXG4gICAgICAgICAgZmV0Y2hWZW51ZSh2ZW51ZVVybCk7XG4gICAgICAgIH0pO1xuICAgICAgfSlcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfVxuICB9KTtcbn1cblxuXG4vLyBUaGlzIGlzIHRoZSBsb2dpYyB0aGF0IGNyZWF0ZXMgdGhlIG1hcC4gU2luY2Ugd2UgaGF2ZSB0d28gc2ltaWxhciBmdW5jdGlvbnMgSSBwdXQgdGhpcyBwYXJ0IGluIGEgc2VwYXJhdGUgZnVuY3Rpb24gdG8ga2VlcCBpdCBEUlkgLSBUaW1cbmZ1bmN0aW9uIGNyZWF0ZU1hcFBhcnQoY2VudGVyKSB7XG4gIC8vIFRpbGVzXG4gIEwudGlsZUxheWVyKCdodHRwczovL2FwaS50aWxlcy5tYXBib3guY29tL3Y0L3tpZH0ve3p9L3t4fS97eX0ucG5nP2FjY2Vzc190b2tlbj1way5leUoxSWpvaWRHaGhiSGw0T1RBaUxDSmhJam9pWTJvMllqZHJaSFJsTVdKbVlqSnliRGQyY1cxclluVm5OU0o5LmpfRFFMZml4SGZoaW9Wakg2cW1xa3cnLCB7XG4gICAgYXR0cmlidXRpb246ICdNYXAgZGF0YSAmY29weTsgPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL1wiPk9wZW5TdHJlZXRNYXA8L2E+IGNvbnRyaWJ1dG9ycywgPGEgaHJlZj1cImh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS8yLjAvXCI+Q0MtQlktU0E8L2E+LCBJbWFnZXJ5IMKpIDxhIGhyZWY9XCJodHRwczovL3d3dy5tYXBib3guY29tL1wiPk1hcGJveDwvYT4nLFxuICAgIG1heFpvb206IDE4LFxuICAgIGlkOiAnbWFwYm94LnN0cmVldHMnLFxuICAgIGFjY2Vzc1Rva2VuOiAncGsuZXlKMUlqb2libWxyYVhSaGFHOXBibVZ6SWl3aVlTSTZJbU5xYzIwM2NITjVOREV3YUdnME9YQnBZbkUwYVhoaFptWWlmUS41OGw4ZFVaZzR1aUZuN0JZblpDSkZBJ1xuICB9KS5hZGRUbyhteW1hcCk7XG4gIC8vIFJhZGl1c1xuICBMLmNpcmNsZShjZW50ZXIsIHtcbiAgICAgIHJhZGl1czogMjE1MDAsXG4gICAgICBjb2xvcjogJ3NhbG1vbicsXG4gICAgICB3ZWlnaHQ6IDEsXG4gICAgICBmaWxsOiB0cnVlXG4gICAgfSkuYWRkVG8obXltYXApO1xufVxuXG5cbi8vIHRoaXMgZnVuY3Rpb24gZGV0ZWN0cyB1c2VycyBsb2NhdGlvbiAtIGJ5IFRpbVxuZnVuY3Rpb24gb25Mb2NhdGlvbkZvdW5kKGUpIHtcbiAgdmFyIHJhZGl1cyA9IGUuYWNjdXJhY3kgLyAyO1xuICAvLyBhZGQgbWFya2VyIHRvIG1hcFxuICBMLm1hcmtlcihlLmxhdGxuZykuYWRkVG8obXltYXApXG4gICAgLy8gb3BlbiBwb3B1cCB3aXRoIGEgbWVzc2FnZVxuICAgIC5iaW5kUG9wdXAoXCJZb3UgYXJlIHdpdGhpbiBcIiArIHJhZGl1cyArIFwiIG1ldGVycyBmcm9tIHRoaXMgcG9pbnRcIikub3BlblBvcHVwKCk7XG4gIC8vIGFkZCBjaXJjbGUgYXJvdW5kIG1hcmtlclxuICBMLmNpcmNsZShlLmxhdGxuZywgcmFkaXVzKS5hZGRUbyhteW1hcCk7XG4gIC8vIHNldCBnbG9iYWwgdmFyaWFibGVzXG4gIGN1cnJlbnRVc2VyTG9jID0gW2UubGF0bG5nLmxhdCwgZS5sYXRsbmcubG5nXVxuICBjdXJyZW50VXNlckxvY1N0ciA9IGN1cnJlbnRVc2VyTG9jLnRvU3RyaW5nKCk7XG59XG4vLyBTdGVwIDQgLSBNYWtlIHRoZSBhY3R1YWwgcmVxdWVzdFxuZnVuY3Rpb24gZmV0Y2hWZW51ZSh1cmkpIHtcbiAgZmV0Y2godXJpKVxuICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgLy8gYS4gcmV0dXJuIHJlc3BvbnNlIGluIGpzb24gZm9ybWF0XG4gICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKG15SnNvbikge1xuICAgICAgLy8gYi4gZXh0cmFjdCBkYXRhIGZyb20gcmVzcG9uc2UgYW5kIHJ1biB0aGlzIGZ1bmN0aW9uXG4gICAgICB2ZW51ZURldGFpbHMobXlKc29uLnJlc3BvbnNlKTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIC8vIENvZGUgZm9yIGhhbmRsaW5nIGVycm9yc1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB2ZW51ZURldGFpbHMocmVzKSB7XG4gIHdpbmRvdy5mYWtlID0gcmVzO1xuICAvLyBNb2RhbCB0aXRsZVxuICBjb25zdCB0aXRsZSA9IHJlcy52ZW51ZS5uYW1lO1xuICAvLyBWZW51ZSBkZXNjcmlwdGlvblxuICBpZiAocmVzLnZlbnVlLmRlc2NyaXB0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgZGVzY3JpcHRpb24gPSByZXMudmVudWUuZGVzY3JpcHRpb247XG4gIH0gZWxzZSB7XG4gICAgdmFyIGRlc2NyaXB0aW9uID0gJ1RoaXMgdmVudWUgZG9lcyBub3QgaGF2ZSBhIGRlc2NyaXB0aW9uJztcbiAgfVxuICAvL0NvbnN0cnVjdCBtb2RhbCBpbWFnZS9cbiAgaWYgKHJlcy52ZW51ZS5iZXN0UGhvdG8gIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBwaG90b1ByZWZpeCA9IHJlcy52ZW51ZS5iZXN0UGhvdG8ucHJlZml4O1xuICAgIHZhciBwaG90b1N1ZmZpeCA9IHJlcy52ZW51ZS5iZXN0UGhvdG8uc3VmZml4O1xuICAgIHZhciB2ZW51ZUltYWdlID0gcGhvdG9QcmVmaXggKyAnNzIweDcyMCcgKyBwaG90b1N1ZmZpeDtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdmVudWVJbWFnZSA9ICdzcmMvaW1nL2RvZy0zLmpwZyc7XG4gIH1cbiAgLy8gQWRkIHdlYnNpdGVcbiAgaWYgKHJlcy52ZW51ZS5zaG9ydFVybCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHdlYnNpdGUgPSByZXMudmVudWUuc2hvcnRVcmw7XG4gIH1cbiAgLy8gQWRkIGFkZHJlc3NcbiAgaWYgKHJlcy52ZW51ZS5sb2NhdGlvbi5hZGRyZXNzICE9PSB1bmRlZmluZWQgJiYgcmVzLnZlbnVlLmxvY2F0aW9uLmNpdHkgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhciBhZGRyZXNzID0gcmVzLnZlbnVlLmxvY2F0aW9uLmFkZHJlc3MgKyAnLCAnICsgcmVzLnZlbnVlLmxvY2F0aW9uLmNpdHk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGFkZHJlc3MgPSAnVGhpcyB2ZW51ZSBkb2VzIG5vdCBoYXZlIGFuIGFkZHJlc3MnO1xuICB9XG4gIC8vIEFkZGluZyBNaW5pIE1hcFxuICBpZihtaW5pTWFwKSB7XG4gICAgbWluaU1hcC5yZW1vdmUoKTtcbiAgfVxuICAvLyBJbnNlcnQgTWluaSBtYXAgd2l0aCB1c2VyIGxvY2F0aW9uIGh0dHBzOi8vbGVhZmxldGpzLmNvbS9yZWZlcmVuY2UtMS4wLjAuaHRtbFxuICBsZXQgdmVudWVMb2NhdGlvbiA9IFtyZXMudmVudWUubG9jYXRpb24ubGF0LCByZXMudmVudWUubG9jYXRpb24ubG5nXTtcbiAgbWluaU1hcCA9IEwubWFwKCdqc01pbmlNYXAnLCB7XG4gICAgc2Nyb2xsV2hlZWxab29tOiBmYWxzZVxuICB9KS5zZXRWaWV3KHZlbnVlTG9jYXRpb24sIDE3KTtcbiAgTC50aWxlTGF5ZXIoJ2h0dHBzOi8vYXBpLnRpbGVzLm1hcGJveC5jb20vdjQve2lkfS97en0ve3h9L3t5fS5wbmc/YWNjZXNzX3Rva2VuPXthY2Nlc3NUb2tlbn0nLCB7XG4gICAgYXR0cmlidXRpb246ICdNYXAgZGF0YSAmY29weTsgPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL1wiPk9wZW5TdHJlZXRNYXA8L2E+IGNvbnRyaWJ1dG9ycywgPGEgaHJlZj1cImh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1zYS8yLjAvXCI+Q0MtQlktU0E8L2E+LCBJbWFnZXJ5IMKpIDxhIGhyZWY9XCJodHRwczovL3d3dy5tYXBib3guY29tL1wiPk1hcGJveDwvYT4nLFxuICAgIG1heFpvb206IDE4LFxuICAgIGlkOiAnbWFwYm94LnN0cmVldHMnLFxuICAgIGFjY2Vzc1Rva2VuOiAncGsuZXlKMUlqb2libWxyYVhSaGFHOXBibVZ6SWl3aVlTSTZJbU5xYzIwM2NITjVOREV3YUdnME9YQnBZbkUwYVhoaFptWWlmUS41OGw4ZFVaZzR1aUZuN0JZblpDSkZBJ1xuICB9KS5hZGRUbyhtaW5pTWFwKTtcbiAgLy8gRGlyZWN0aW9uc1xuICBjb25zdCBkaXJlY3Rpb25zID0gJ2h0dHA6Ly93d3cuZ29vZ2xlLmNvbS9tYXBzL3BsYWNlLycgKyByZXMudmVudWUubG9jYXRpb24ubGF0ICsgJywnICsgcmVzLnZlbnVlLmxvY2F0aW9uLmxuZztcbiAgLy8gSW5qZWN0IHRlbXBsYXRlIHdpdGggbW9kYWwgY29udGVudFxuICBjcmVhdGVNb2RhbENvbnRlbnQodGl0bGUsIHZlbnVlSW1hZ2UsIGRlc2NyaXB0aW9uLCBhZGRyZXNzLCB3ZWJzaXRlLCBkaXJlY3Rpb25zKTsgXG59XG5cbi8vIENyZWF0ZSBNb2RhbCBjb250ZW50XG5mdW5jdGlvbiBjcmVhdGVNb2RhbENvbnRlbnQodGl0bGUsIHZlbnVlSW1hZ2UsIGRlc2NyaXB0aW9uLCBhZGRyZXNzLCB3ZWJzaXRlLCBkaXJlY3Rpb25zKSB7XG4gIC8vIGVtcHR5IG1vZGFsIGlmIGl0IGhhcyBjb250ZW50c1xuXG4gIHdoaWxlKG1vZGFsQ29udGVudENvbnRhaW5lci5maXJzdEVsZW1lbnRDaGlsZCkge1xuICAgIG1vZGFsQ29udGVudENvbnRhaW5lci5yZW1vdmVDaGlsZChtb2RhbENvbnRlbnRDb250YWluZXIuZmlyc3RDaGlsZCk7XG4gIH1cblxuICAvLyBtb2RhbCBjb250ZW50IHRlbXBsYXRlXG4gIG1vZGFsQ29udGVudENvbnRhaW5lci5pbm5lckhUTUwgPSBgXG4gIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXJcIj5cbiAgICA8aDUgY2xhc3M9XCJtb2RhbC10aXRsZVwiIGlkPVwianNNb2RhbExvbmdUaXRsZVwiPiR7dGl0bGV9PC9oNT5cbiAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIj5cbiAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPiZ0aW1lczs8L3NwYW4+XG4gICAgPC9idXR0b24+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiPlxuICAgIDxkaXYgY2xhc3M9XCJ2ZW51ZS1pdGVtXCI+XG4gICAgICA8aW1nIGNsYXNzPVwiZC1ibG9jayB3LTEwMFwiIGlkPVwianNWZW51ZUltZ1wiIHNyYz1cIiR7dmVudWVJbWFnZX1cIiBhbHQ9XCJtb2RhbC1leGFtcGxlXCI+XG4gICAgPC9kaXY+XG4gICAgPHAgaWQ9XCJqc1ZlbnVlRGVzY3JpcHRpb25cIj4ke2Rlc2NyaXB0aW9ufTwvcD5cbiAgICA8cCBjbGFzcz1cImpzVmVudWVBZGRyZXNzXCI+JHthZGRyZXNzfTwvcD5cbiAgICA8YSBjbGFzcz1cInByLTVcIiBpZD1cImpzVmVudWVXZWJzaXRlXCIgaHJlZj1cIiR7d2Vic2l0ZX1cIiB0YXJnZXQ9XCJfYmxhbmtcIj53ZWJzaXRlIGxpbms8L2E+XG4gICAgPGEgaHJlZj1cIiR7ZGlyZWN0aW9uc31cIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGlkPVwianNEaXJlY3Rpb25zXCIgdGFyZ2V0PVwiX2JsYW5rXCI+R2V0IERpcmVjdGlvbnM8L2E+XG4gIDwvZGl2PlxuICBgO1xuXG4gIC8vIE5vdyB0b2dnbGUgdGhlIE1vZGFsXG4gICQoJyNtb2RhbENlbnRlcicpLm1vZGFsKCdzaG93Jyk7XG59XG5cbmNvbnN0IHRyZW5kaW5nID0ge1xuICBcIm1ldGFcIjoge1xuICAgICAgXCJjb2RlXCI6IDIwMCxcbiAgICAgIFwicmVxdWVzdElkXCI6IFwiNWNiNjYwMzE0NDM0Yjk0ZDFlYWVlNDc2XCJcbiAgfSxcbiAgXCJyZXNwb25zZVwiOiB7XG4gICAgICBcInZlbnVlc1wiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgICBcImlkXCI6IFwiNWJmNjI5ZmU4MTYzNWIwMDJjOWQ3MWMwXCIsXG4gICAgICAgICAgICAgIFwibmFtZVwiOiBcIkJyaWRnZW1hbiBSZXNlcnZlXCIsXG4gICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgXCJsb2NhdGlvblwiOiB7XG4gICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODc3OTc1LFxuICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc2MDk3LFxuICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODc3OTc1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzYwOTdcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgXCJkaXN0YW5jZVwiOiA5NyxcbiAgICAgICAgICAgICAgICAgIFwicG9zdGFsQ29kZVwiOiBcIjEwMjRcIixcbiAgICAgICAgICAgICAgICAgIFwiY2NcIjogXCJOWlwiLFxuICAgICAgICAgICAgICAgICAgXCJjaXR5XCI6IFwiQXVja2xhbmRcIixcbiAgICAgICAgICAgICAgICAgIFwic3RhdGVcIjogXCJBdWNrbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJjb3VudHJ5XCI6IFwiTmV3IFplYWxhbmRcIixcbiAgICAgICAgICAgICAgICAgIFwiZm9ybWF0dGVkQWRkcmVzc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgXCJBdWNrbGFuZCAxMDI0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJOZXcgWmVhbGFuZFwiXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRiZjU4ZGQ4ZDQ4OTg4ZDE2Mzk0MTczNVwiLFxuICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIlBhcmtcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJQYXJrc1wiLFxuICAgICAgICAgICAgICAgICAgICAgIFwic2hvcnROYW1lXCI6IFwiUGFya1wiLFxuICAgICAgICAgICAgICAgICAgICAgIFwiaWNvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvcGFya19cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCJ0aXBDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwidmlzaXRzQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwiY291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgXCJ1bmNvbmZpcm1lZENvdW50XCI6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2MDQ5XCIsXG4gICAgICAgICAgICAgIFwidmVudWVDaGFpbnNcIjogW10sXG4gICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgICBcImlkXCI6IFwiNTU1MjNjNDU0OThlNTg1ZTllMTk3MDM5XCIsXG4gICAgICAgICAgICAgIFwibmFtZVwiOiBcIk10LiBFZGVuIERvbWFpblwiLFxuICAgICAgICAgICAgICBcImNvbnRhY3RcIjoge30sXG4gICAgICAgICAgICAgIFwibG9jYXRpb25cIjoge1xuICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3NjEwNixcbiAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NjUyNixcbiAgICAgICAgICAgICAgICAgIFwibGFiZWxlZExhdExuZ3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3NjEwNixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc2NTI2XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogNTI2LFxuICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICBcIm5laWdoYm9yaG9vZFwiOiBcIlBvbnNvbmJ5XCIsXG4gICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJmb3JtYXR0ZWRBZGRyZXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMTYzOTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiUGFya1wiLFxuICAgICAgICAgICAgICAgICAgICAgIFwicGx1cmFsTmFtZVwiOiBcIlBhcmtzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJzaG9ydE5hbWVcIjogXCJQYXJrXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9wYXJrX1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgXCJwcmltYXJ5XCI6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgXCJ2ZXJpZmllZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcInVzZXJzQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJsYXN0Q2hlY2tpbkV4cGlyZWRBdFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTYwNDlcIixcbiAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgXCJoYXNQZXJrXCI6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICAgIFwiaWRcIjogXCI0ZTMwYzg0NmZhNzYzOGU2NjEzMjU3NDlcIixcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiQmlnIEtpbmcgUmVzZXJ2ZVwiLFxuICAgICAgICAgICAgICBcImNvbnRhY3RcIjoge30sXG4gICAgICAgICAgICAgIFwibG9jYXRpb25cIjoge1xuICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg5NTEwNjQ4OTEwNDczLFxuICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc0ODQ2MzU2Mjk0NzE3LFxuICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODk1MTA2NDg5MTA0NzMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NDg0NjM1NjI5NDcxN1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICBcImRpc3RhbmNlXCI6IDIxMTIsXG4gICAgICAgICAgICAgICAgICBcImNjXCI6IFwiTlpcIixcbiAgICAgICAgICAgICAgICAgIFwiY291bnRyeVwiOiBcIk5ldyBaZWFsYW5kXCIsXG4gICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgIFwiTmV3IFplYWxhbmRcIlxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImNhdGVnb3JpZXNcIjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCI0YmY1OGRkOGQ0ODk4OGQxZTU5NDE3MzVcIixcbiAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJEb2cgUnVuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiRG9nIFJ1bnNcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIkRvZyBSdW5cIixcbiAgICAgICAgICAgICAgICAgICAgICBcImljb25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBcInByZWZpeFwiOiBcImh0dHBzOi8vc3MzLjRzcWkubmV0L2ltZy9jYXRlZ29yaWVzX3YyL3BhcmtzX291dGRvb3JzL2RvZ3J1bl9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCJ0aXBDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwidmlzaXRzQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwiY291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgXCJ1bmNvbmZpcm1lZENvdW50XCI6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2MDQ5XCIsXG4gICAgICAgICAgICAgIFwidmVudWVDaGFpbnNcIjogW10sXG4gICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgICBcImlkXCI6IFwiNGMzZmYzYTRhZjA1MmQ3ZjBhMmQ3Yjc5XCIsXG4gICAgICAgICAgICAgIFwibmFtZVwiOiBcIkdyaWJibGVodXJzdCBQYXJrIChFZGVuIFJ1Z2J5IENsdWIpXCIsXG4gICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgXCJsb2NhdGlvblwiOiB7XG4gICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODgwNTUyOTYxOTg1NzIsXG4gICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzM4NzQxMjYwMTY4MjQsXG4gICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIjogXCJkaXNwbGF5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44ODA1NTI5NjE5ODU3MixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0LjczODc0MTI2MDE2ODI0XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMTkyOSxcbiAgICAgICAgICAgICAgICAgIFwiY2NcIjogXCJOWlwiLFxuICAgICAgICAgICAgICAgICAgXCJjb3VudHJ5XCI6IFwiTmV3IFplYWxhbmRcIixcbiAgICAgICAgICAgICAgICAgIFwiZm9ybWF0dGVkQWRkcmVzc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgXCJOZXcgWmVhbGFuZFwiXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRiZjU4ZGQ4ZDQ4OTg4ZDE2Mzk0MTczNVwiLFxuICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIlBhcmtcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJQYXJrc1wiLFxuICAgICAgICAgICAgICAgICAgICAgIFwic2hvcnROYW1lXCI6IFwiUGFya1wiLFxuICAgICAgICAgICAgICAgICAgICAgIFwiaWNvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvcGFya19cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCJ0aXBDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwidmlzaXRzQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwiY291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgXCJ1bmNvbmZpcm1lZENvdW50XCI6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2MDQ5XCIsXG4gICAgICAgICAgICAgIFwidmVudWVDaGFpbnNcIjogW10sXG4gICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgICBcImlkXCI6IFwiNGM2NWY3NGY5Y2I4MmQ3ZjYzOTY4ZmQyXCIsXG4gICAgICAgICAgICAgIFwibmFtZVwiOiBcIk1hbmdhd2hhaSBoZWFkc1wiLFxuICAgICAgICAgICAgICBcImNvbnRhY3RcIjoge30sXG4gICAgICAgICAgICAgIFwibG9jYXRpb25cIjoge1xuICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg2NTk0ODQzMzEzOTM0LFxuICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc1MzQ2NTU0MDIxMTU1LFxuICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODY1OTQ4NDMzMTM5MzQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NTM0NjU1NDAyMTE1NVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICBcImRpc3RhbmNlXCI6IDE1MzgsXG4gICAgICAgICAgICAgICAgICBcImNjXCI6IFwiTlpcIixcbiAgICAgICAgICAgICAgICAgIFwiY2l0eVwiOiBcIk1hbmdhd2hhaVwiLFxuICAgICAgICAgICAgICAgICAgXCJzdGF0ZVwiOiBcIk5vcnRobGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJjb3VudHJ5XCI6IFwiTmV3IFplYWxhbmRcIixcbiAgICAgICAgICAgICAgICAgIFwiZm9ybWF0dGVkQWRkcmVzc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAgXCJNYW5nYXdoYWlcIixcbiAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMWUyOTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiQmVhY2hcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJCZWFjaGVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJzaG9ydE5hbWVcIjogXCJCZWFjaFwiLFxuICAgICAgICAgICAgICAgICAgICAgIFwiaWNvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvYmVhY2hfXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwic3VmZml4XCI6IFwiLnBuZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBcInByaW1hcnlcIjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBcInZlcmlmaWVkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICBcInN0YXRzXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwidXNlcnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJjaGVja2luc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJiZWVuSGVyZVwiOiB7XG4gICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcImxhc3RDaGVja2luRXhwaXJlZEF0XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcIm1hcmtlZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwicmVmZXJyYWxJZFwiOiBcInYtMTU1NTQ1NjI5MlwiLFxuICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICBcImhhc1BlcmtcIjogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJpZFwiOiBcIjRlZmU5NGZjYjYzNDZmZWFlYmI0ODQ4NlwiLFxuICAgICAgICAgICAgICBcIm5hbWVcIjogXCJPcmV3YSBTdXJmIENsdWJcIixcbiAgICAgICAgICAgICAgXCJjb250YWN0XCI6IHt9LFxuICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44Nzg4MjYxOTg1ODkzNSxcbiAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NTI0NjYwMjA3NzQyLFxuICAgICAgICAgICAgICAgICAgXCJsYWJlbGVkTGF0TG5nc1wiOiBbXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCI6IFwiZGlzcGxheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODc4ODI2MTk4NTg5MzUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NTI0NjYwMjA3NzQyXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogNjk2LFxuICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJmb3JtYXR0ZWRBZGRyZXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMWUzOTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiU3VyZiBTcG90XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiU3VyZiBTcG90c1wiLFxuICAgICAgICAgICAgICAgICAgICAgIFwic2hvcnROYW1lXCI6IFwiU3VyZiBTcG90XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9zdXJmc3BvdF9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzdWZmaXhcIjogXCIucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFwicHJpbWFyeVwiOiB0cnVlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIFwidmVyaWZpZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgIFwic3RhdHNcIjoge1xuICAgICAgICAgICAgICAgICAgXCJ0aXBDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ1c2Vyc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcImNoZWNraW5zQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwidmlzaXRzQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImJlZW5IZXJlXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwiY291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibGFzdENoZWNraW5FeHBpcmVkQXRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwibWFya2VkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgXCJ1bmNvbmZpcm1lZENvdW50XCI6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJyZWZlcnJhbElkXCI6IFwidi0xNTU1NDU2MjkyXCIsXG4gICAgICAgICAgICAgIFwidmVudWVDaGFpbnNcIjogW10sXG4gICAgICAgICAgICAgIFwiaGFzUGVya1wiOiBmYWxzZVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgICBcImlkXCI6IFwiNGI1MjA0ZTBmOTY0YTUyMGIwNjEyN2UzXCIsXG4gICAgICAgICAgICAgIFwibmFtZVwiOiBcIk1vdW50IEVkZW4gLSBNYXVuZ2F3aGF1XCIsXG4gICAgICAgICAgICAgIFwiY29udGFjdFwiOiB7fSxcbiAgICAgICAgICAgICAgXCJsb2NhdGlvblwiOiB7XG4gICAgICAgICAgICAgICAgICBcImFkZHJlc3NcIjogXCJNb3VudCBFZGVuXCIsXG4gICAgICAgICAgICAgICAgICBcImxhdFwiOiAtMzYuODc3NTA5NDA5NjY4NTUsXG4gICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzY0MzkyMzc1OTQ2MDQsXG4gICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIjogXCJkaXNwbGF5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44Nzc1MDk0MDk2Njg1NSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsbmdcIjogMTc0Ljc2NDM5MjM3NTk0NjA0XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgIFwiZGlzdGFuY2VcIjogMzg3LFxuICAgICAgICAgICAgICAgICAgXCJwb3N0YWxDb2RlXCI6IFwiMTAyNFwiLFxuICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICBcImNpdHlcIjogXCJNdCBFZGVuXCIsXG4gICAgICAgICAgICAgICAgICBcInN0YXRlXCI6IFwiQXVja2xhbmRcIixcbiAgICAgICAgICAgICAgICAgIFwiY291bnRyeVwiOiBcIk5ldyBaZWFsYW5kXCIsXG4gICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgIFwiTW91bnQgRWRlblwiLFxuICAgICAgICAgICAgICAgICAgICAgIFwiTXQgRWRlbiAxMDI0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJOZXcgWmVhbGFuZFwiXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiY2F0ZWdvcmllc1wiOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgXCJpZFwiOiBcIjRlYjFkNGQ1NGI5MDBkNTZjODhhNDVmY1wiLFxuICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIk1vdW50YWluXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiTW91bnRhaW5zXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJzaG9ydE5hbWVcIjogXCJNb3VudGFpblwiLFxuICAgICAgICAgICAgICAgICAgICAgIFwiaWNvblwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwicHJlZml4XCI6IFwiaHR0cHM6Ly9zczMuNHNxaS5uZXQvaW1nL2NhdGVnb3JpZXNfdjIvcGFya3Nfb3V0ZG9vcnMvbW91bnRhaW5fXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwic3VmZml4XCI6IFwiLnBuZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBcInByaW1hcnlcIjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBcInZlcmlmaWVkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICBcInN0YXRzXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwidXNlcnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJjaGVja2luc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJiZWVuSGVyZVwiOiB7XG4gICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcImxhc3RDaGVja2luRXhwaXJlZEF0XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcIm1hcmtlZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwicmVmZXJyYWxJZFwiOiBcInYtMTU1NTQ1NjY0MVwiLFxuICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICBcImhhc1BlcmtcIjogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJpZFwiOiBcIjRmMDY4Y2QxOWFkZjNkZWY3MjE2ZWEyN1wiLFxuICAgICAgICAgICAgICBcIm5hbWVcIjogXCJCYWxjb25hamVcIixcbiAgICAgICAgICAgICAgXCJjb250YWN0XCI6IHt9LFxuICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwiYWRkcmVzc1wiOiBcIlJlbXVlcmEgUmRcIixcbiAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44NzQwMzY5ODc0MzE0OCxcbiAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43ODI1OTY5MDcwMzQ5OSxcbiAgICAgICAgICAgICAgICAgIFwibGFiZWxlZExhdExuZ3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg3NDAzNjk4NzQzMTQ4LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzgyNTk2OTA3MDM0OTlcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgXCJkaXN0YW5jZVwiOiAyMDUyLFxuICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJmb3JtYXR0ZWRBZGRyZXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICBcIlJlbXVlcmEgUmRcIixcbiAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiU2NlbmljIExvb2tvdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJTY2VuaWMgTG9va291dHNcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlNjZW5pYyBMb29rb3V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9zY2VuaWNsb29rb3V0X1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgXCJwcmltYXJ5XCI6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgXCJ2ZXJpZmllZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcInVzZXJzQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJsYXN0Q2hlY2tpbkV4cGlyZWRBdFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTY2NDFcIixcbiAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgXCJoYXNQZXJrXCI6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICAgIFwiaWRcIjogXCI0ZjI4YzYwNmU0YjAzYTM3NjcxZTYxZGNcIixcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiQmFzc2V0dCBSZFwiLFxuICAgICAgICAgICAgICBcImNvbnRhY3RcIjoge30sXG4gICAgICAgICAgICAgIFwibG9jYXRpb25cIjoge1xuICAgICAgICAgICAgICAgICAgXCJhZGRyZXNzXCI6IFwiQmFzc2V0dCBSZFwiLFxuICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg2OTc3MixcbiAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43ODI2MjYsXG4gICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIjogXCJkaXNwbGF5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44Njk3NzIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43ODI2MjZcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgXCJkaXN0YW5jZVwiOiAyMjIxLFxuICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJmb3JtYXR0ZWRBZGRyZXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICBcIkJhc3NldHQgUmRcIixcbiAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiU2NlbmljIExvb2tvdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJTY2VuaWMgTG9va291dHNcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlNjZW5pYyBMb29rb3V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9zY2VuaWNsb29rb3V0X1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgXCJwcmltYXJ5XCI6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgXCJ2ZXJpZmllZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcInVzZXJzQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJsYXN0Q2hlY2tpbkV4cGlyZWRBdFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTY2NDFcIixcbiAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgXCJoYXNQZXJrXCI6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICAgIFwiaWRcIjogXCI0ZDlkMWFiYjhlZmFhMTQzZmE0ZDVlYjdcIixcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiTXQgU3QgSm9obiBTdW1taXRcIixcbiAgICAgICAgICAgICAgXCJjb250YWN0XCI6IHt9LFxuICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44ODM0MDU1NTM2Njg0OSxcbiAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43ODA3MjEyMDEwNzMyOCxcbiAgICAgICAgICAgICAgICAgIFwibGFiZWxlZExhdExuZ3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiOiBcImRpc3BsYXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYXRcIjogLTM2Ljg4MzQwNTU1MzY2ODQ5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzgwNzIxMjAxMDczMjhcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgXCJkaXN0YW5jZVwiOiAxODk1LFxuICAgICAgICAgICAgICAgICAgXCJwb3N0YWxDb2RlXCI6IFwiMTAyNFwiLFxuICAgICAgICAgICAgICAgICAgXCJjY1wiOiBcIk5aXCIsXG4gICAgICAgICAgICAgICAgICBcImNpdHlcIjogXCJBdWNrbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJzdGF0ZVwiOiBcIkF1Y2tsYW5kXCIsXG4gICAgICAgICAgICAgICAgICBcImNvdW50cnlcIjogXCJOZXcgWmVhbGFuZFwiLFxuICAgICAgICAgICAgICAgICAgXCJmb3JtYXR0ZWRBZGRyZXNzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICBcIkF1Y2tsYW5kIDEwMjRcIixcbiAgICAgICAgICAgICAgICAgICAgICBcIk5ldyBaZWFsYW5kXCJcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJjYXRlZ29yaWVzXCI6IFtcbiAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBcImlkXCI6IFwiNGJmNThkZDhkNDg5ODhkMTY1OTQxNzM1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiU2NlbmljIExvb2tvdXRcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInBsdXJhbE5hbWVcIjogXCJTY2VuaWMgTG9va291dHNcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlNjZW5pYyBMb29rb3V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJpY29uXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwcmVmaXhcIjogXCJodHRwczovL3NzMy40c3FpLm5ldC9pbWcvY2F0ZWdvcmllc192Mi9wYXJrc19vdXRkb29ycy9zY2VuaWNsb29rb3V0X1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1ZmZpeFwiOiBcIi5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgXCJwcmltYXJ5XCI6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgXCJ2ZXJpZmllZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgXCJzdGF0c1wiOiB7XG4gICAgICAgICAgICAgICAgICBcInRpcENvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcInVzZXJzQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwiY2hlY2tpbnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJ2aXNpdHNDb3VudFwiOiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiYmVlbkhlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgXCJjb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJsYXN0Q2hlY2tpbkV4cGlyZWRBdFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJtYXJrZWRcIjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICBcInVuY29uZmlybWVkQ291bnRcIjogMFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcInJlZmVycmFsSWRcIjogXCJ2LTE1NTU0NTY2NDFcIixcbiAgICAgICAgICAgICAgXCJ2ZW51ZUNoYWluc1wiOiBbXSxcbiAgICAgICAgICAgICAgXCJoYXNQZXJrXCI6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICAgIFwiaWRcIjogXCI1MTRjMGIyZGU0YjBjY2Y2NWZjZTk4ZTZcIixcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiR3JpYmJsZWhpcnN0IFBhcmtcIixcbiAgICAgICAgICAgICAgXCJjb250YWN0XCI6IHt9LFxuICAgICAgICAgICAgICBcImxvY2F0aW9uXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44NzI0NjcwNDE1MzE1MzYsXG4gICAgICAgICAgICAgICAgICBcImxuZ1wiOiAxNzQuNzUwMjI3MjM3ODE0MjIsXG4gICAgICAgICAgICAgICAgICBcImxhYmVsZWRMYXRMbmdzXCI6IFtcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIjogXCJkaXNwbGF5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibGF0XCI6IC0zNi44NzI0NjcwNDE1MzE1MzYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwibG5nXCI6IDE3NC43NTAyMjcyMzc4MTQyMlxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICBcImRpc3RhbmNlXCI6IDExMjksXG4gICAgICAgICAgICAgICAgICBcImNjXCI6IFwiTlpcIixcbiAgICAgICAgICAgICAgICAgIFwiY291bnRyeVwiOiBcIk5ldyBaZWFsYW5kXCIsXG4gICAgICAgICAgICAgICAgICBcImZvcm1hdHRlZEFkZHJlc3NcIjogW1xuICAgICAgICAgICAgICAgICAgICAgIFwiTmV3IFplYWxhbmRcIlxuICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImNhdGVnb3JpZXNcIjogW1xuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIFwiaWRcIjogXCI0YmY1OGRkOGQ0ODk4OGQxNjM5NDE3MzVcIixcbiAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJQYXJrXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJwbHVyYWxOYW1lXCI6IFwiUGFya3NcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInNob3J0TmFtZVwiOiBcIlBhcmtcIixcbiAgICAgICAgICAgICAgICAgICAgICBcImljb25cIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBcInByZWZpeFwiOiBcImh0dHBzOi8vc3MzLjRzcWkubmV0L2ltZy9jYXRlZ29yaWVzX3YyL3BhcmtzX291dGRvb3JzL3BhcmtfXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwic3VmZml4XCI6IFwiLnBuZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBcInByaW1hcnlcIjogdHJ1ZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBcInZlcmlmaWVkXCI6IGZhbHNlLFxuICAgICAgICAgICAgICBcInN0YXRzXCI6IHtcbiAgICAgICAgICAgICAgICAgIFwidGlwQ291bnRcIjogMCxcbiAgICAgICAgICAgICAgICAgIFwidXNlcnNDb3VudFwiOiAwLFxuICAgICAgICAgICAgICAgICAgXCJjaGVja2luc0NvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcInZpc2l0c0NvdW50XCI6IDBcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJiZWVuSGVyZVwiOiB7XG4gICAgICAgICAgICAgICAgICBcImNvdW50XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcImxhc3RDaGVja2luRXhwaXJlZEF0XCI6IDAsXG4gICAgICAgICAgICAgICAgICBcIm1hcmtlZFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgIFwidW5jb25maXJtZWRDb3VudFwiOiAwXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwicmVmZXJyYWxJZFwiOiBcInYtMTU1NTQ1NjY5NFwiLFxuICAgICAgICAgICAgICBcInZlbnVlQ2hhaW5zXCI6IFtdLFxuICAgICAgICAgICAgICBcImhhc1BlcmtcIjogZmFsc2VcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICBdLFxuICAgICAgXCJjb25maWRlbnRcIjogZmFsc2VcbiAgfVxufSJdLCJmaWxlIjoiYXBwLm1pbi5qcyJ9
